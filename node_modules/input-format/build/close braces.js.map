{"version":3,"sources":["../source/close braces.js"],"names":["close_braces","retained_template","template","placeholder","empty_placeholder","cut_before","length","opening_braces","closing_braces","dangling_braces","replace"],"mappings":";;;;;kBAEwBA,Y;;AAFxB;;AAEe,SAASA,YAAT,CAAsBC,iBAAtB,EAAyCC,QAAzC,EACf;AAAA,KADkEC,WAClE,uEADgF,GAChF;AAAA,KADqFC,iBACrF,uEADyG,GACzG;;AACC,KAAIC,aAAaJ,kBAAkBK,MAAnC;;AAEA,KAAMC,iBAAiB,+BAAiB,GAAjB,EAAsBN,iBAAtB,CAAvB;AACA,KAAMO,iBAAiB,+BAAiB,GAAjB,EAAsBP,iBAAtB,CAAvB;;AAEA,KAAIQ,kBAAkBF,iBAAiBC,cAAvC;;AAEA,QAAOC,kBAAkB,CAAlB,IAAuBJ,aAAaH,SAASI,MAApD,EACA;AACCL,uBAAqBC,SAASG,UAAT,EAAqBK,OAArB,CAA6BP,WAA7B,EAA0CC,iBAA1C,CAArB;;AAEA,MAAIF,SAASG,UAAT,MAAyB,GAA7B,EACA;AACCI;AACA;;AAEDJ;AACA;;AAED,QAAOJ,iBAAP;AACA","file":"close braces.js","sourcesContent":["import { count_occurences } from './helpers'\n\nexport default function close_braces(retained_template, template, placeholder = 'x', empty_placeholder = ' ')\n{\n\tlet cut_before = retained_template.length\n\n\tconst opening_braces = count_occurences('(', retained_template)\n\tconst closing_braces = count_occurences(')', retained_template)\n\n\tlet dangling_braces = opening_braces - closing_braces\n\n\twhile (dangling_braces > 0 && cut_before < template.length)\n\t{\n\t\tretained_template += template[cut_before].replace(placeholder, empty_placeholder)\n\n\t\tif (template[cut_before] === ')')\n\t\t{\n\t\t\tdangling_braces--\n\t\t}\n\n\t\tcut_before++\n\t}\n\n\treturn retained_template\n}\n"]}