'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.submitFormOnCtrlEnter = submitFormOnCtrlEnter;
exports.submitContainingForm = submitContainingForm;
exports.getScrollbarWidth = getScrollbarWidth;

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Submits the form on `Ctrl` + `Enter` (or `Cmd` + `Enter`).
function submitFormOnCtrlEnter(event, component) {
	if ((event.ctrlKey || event.metaKey) && event.keyCode === 13) {
		if (submitContainingForm(_reactDom2.default.findDOMNode(component))) {
			event.preventDefault();
			return true;
		}
	}
}

function submitContainingForm(node) {
	while (node.parentElement) {
		node = node.parentElement;
		if (node instanceof HTMLFormElement) {
			// Won't use `node.submit()` because it bypasses `onSubmit`.
			// Will click the submit button instead.
			var submit = node.querySelector('button[type=submit]');
			if (submit) {
				submit.click();
				return true;
			}
		}
	}
}

function getScrollbarWidth() {
	// // `window.innerWidth` has a bug:
	// // it's decreases as the page scale is increased.
	// // Therefore not using it.
	// // (Full width) - (Width minus scrollbar)
	// return document.body.clientWidth - window.innerWidth

	return 17;
}
//# sourceMappingURL=dom.js.map