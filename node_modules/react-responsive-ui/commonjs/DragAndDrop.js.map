{"version":3,"sources":["../source/DragAndDrop.js"],"names":["DragAndDrop","CanDrop","type","drop","Error","get_react_dnd_type","props","monitor","component","get_dropped_object","connect","dropTarget","draggedOver","isOver","canDrop","context","layer","isDragging","File","Files","FILE","dropped","getItem","files"],"mappings":";;;;;;QAwDgBA,W,GAAAA,W;;AAxDhB;;;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EACP;AACC,KAAI,CAACD,IAAL,EACA;AACC,QAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACA;;AAED,QAAO,0BAAWC,mBAAmBH,IAAnB,CAAX,EACP;AACCC,QAAM,cAACG,KAAD,EAAQC,OAAR,EAAiBC,SAAjB;AAAA,UAA+BL,MAAKG,KAAL,EAAYG,mBAAmBF,OAAnB,EAA4BL,IAA5B,CAAZ,EAA+CM,SAA/C,CAA/B;AAAA;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbD,EADO,EAgBP,UAACE,OAAD,EAAUH,OAAV;AAAA,SACC;AACAI,eAAcD,QAAQC,UAAR,EADd;AAEAC,gBAAcL,QAAQM,MAAR,EAFd;AAGAC,YAAcP,QAAQO,OAAR;AAHd,GADD;AAAA,EAhBO,CAAP;AAsBA;;AAED;;AACO,SAASd,WAAT,GACP;AACC,KAAMe,UAAU,8DAAhB;;AAEA,KAAMC,QAAQ,yBAAU,UAACT,OAAD;AAAA,SACvB;AACAU,eAAaV,QAAQU,UAAR;AACb;AACA;AACA;AAJA,GADuB;AAAA,EAAV,CAAd;;AAQA,QAAO;AAAA,SAAaF,QAAQC,MAAMR,SAAN,CAAR,CAAb;AAAA,EAAP;AACA;;AAED;AACO,IAAMU,sBAAO,MAAb;;AAEP;AACO,IAAMC,wBAAQ,OAAd;;AAEP;AACA;AACA,SAASd,kBAAT,CAA4BH,IAA5B,EACA;AACC,SAAQA,IAAR;AAEC,OAAKgB,IAAL;AACA,OAAKC,KAAL;AACC,UAAO,kCAAYC,IAAnB;AACD;AACC,UAAOlB,IAAP;AANF;AAQA;;AAED;AACA,SAASO,kBAAT,CAA4BF,OAA5B,EAAqCL,IAArC,EACA;AACC,KAAMmB,UAAUd,QAAQe,OAAR,EAAhB;;AAEA,SAAQpB,IAAR;AAEC,OAAKgB,IAAL;AACC,UAAOG,QAAQE,KAAR,CAAc,CAAd,CAAP;AACD,OAAKJ,KAAL;AACC,UAAOE,QAAQE,KAAf;AACD;AACC,UAAOF,OAAP;AAPF;AASA","file":"DragAndDrop.js","sourcesContent":["import HTML5Backend, { NativeTypes } from 'react-dnd-html5-backend'\r\nimport { DragDropContext, DragLayer, DropTarget } from 'react-dnd'\r\n\r\n// Usage:\r\n//\r\n// import { DragAndDrop, CanDrop, FILE, FILES } from 'react-responsive-ui'\r\n//\r\n// @DragAndDrop()\r\n// class Application extends Component {\r\n// \trender() {\r\n// \t\tconst { isDragging, children } = this.props\r\n// \t\treturn <div>{ children }</div>\r\n// \t}\r\n// }\r\n//\r\n// @CanDrop(FILE, (props, dropped, component) => alert('Uploading file'))\r\n// class FileDropArea extends Component {\r\n// \trender() {\r\n// \t\tconst { dropTarget, draggedOver, canDrop } = this.props\r\n// \t\treturn dropTarget(<div>Drop files here</div>)\r\n// \t}\r\n// }\r\n\r\n// Decorate the droppable area component with this decorator\r\nexport function CanDrop(type, drop)\r\n{\r\n\tif (!type)\r\n\t{\r\n\t\tthrow new Error('Provide a `type` for `@CanDrop()` decorator')\r\n\t}\r\n\r\n\treturn DropTarget(get_react_dnd_type(type),\r\n\t{\r\n\t\tdrop: (props, monitor, component) => drop(props, get_dropped_object(monitor, type), component),\r\n\r\n\t\t// canDrop(props, monitor)\r\n\t\t// {\r\n\t\t// \tswitch (type)\r\n\t\t// \t{\r\n\t\t// \t\t// // Browser doesn't allow reading \"files\" until the drop event.\r\n\t\t// \t\t// case File:\r\n\t\t// \t\t// \treturn monitor.getItem().files.length === 1\r\n\t\t// \t\tdefault:\r\n\t\t// \t\t\treturn true\r\n\t\t// \t}\r\n\t\t// }\r\n\t},\r\n\t(connect, monitor) =>\r\n\t({\r\n\t\tdropTarget  : connect.dropTarget(),\r\n\t\tdraggedOver : monitor.isOver(),\r\n\t\tcanDrop     : monitor.canDrop()\r\n\t}))\r\n}\r\n\r\n// Decorate the root React application component with this decorator\r\nexport function DragAndDrop()\r\n{\r\n\tconst context = DragDropContext(HTML5Backend)\r\n\r\n\tconst layer = DragLayer((monitor) =>\r\n\t({\r\n\t\tisDragging : monitor.isDragging(),\r\n\t\t// item           : monitor.getItem(),\r\n\t\t// item_type      : monitor.getItemType(),\r\n\t\t// current_offset : monitor.getSourceClientOffset()\r\n\t}))\r\n\r\n\treturn component => context(layer(component))\r\n}\r\n\r\n// Native file drag'n'drop (single file)\r\nexport const File = 'File'\r\n\r\n// Native file drag'n'drop (multiple files)\r\nexport const Files = 'Files'\r\n\r\n// Gets the corresponding `react-dnd` type\r\n// for a given droppable object type\r\nfunction get_react_dnd_type(type)\r\n{\r\n\tswitch (type)\r\n\t{\r\n\t\tcase File:\r\n\t\tcase Files:\r\n\t\t\treturn NativeTypes.FILE\r\n\t\tdefault:\r\n\t\t\treturn type\r\n\t}\r\n}\r\n\r\n// Gets the dropped object from `monitor`\r\nfunction get_dropped_object(monitor, type)\r\n{\r\n\tconst dropped = monitor.getItem()\r\n\r\n\tswitch (type)\r\n\t{\r\n\t\tcase File:\r\n\t\t\treturn dropped.files[0]\r\n\t\tcase Files:\r\n\t\t\treturn dropped.files\r\n\t\tdefault:\r\n\t\t\treturn dropped\r\n\t}\r\n}"]}