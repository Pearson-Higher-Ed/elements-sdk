'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _PageAndMenu = require('./PageAndMenu');

var _PageAndMenu2 = _interopRequireDefault(_PageAndMenu);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Menu_button = function (_PureComponent) {
	_inherits(Menu_button, _PureComponent);

	function Menu_button() {
		_classCallCheck(this, Menu_button);

		var _this = _possibleConstructorReturn(this, (Menu_button.__proto__ || Object.getPrototypeOf(Menu_button)).call(this));

		_this.on_click = _this.on_click.bind(_this);
		return _this;
	}

	_createClass(Menu_button, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this2 = this;

			this.unregister = this.context.react_responsive_ui_menu.register_menu_button({
				element: function element() {
					return _reactDom2.default.findDOMNode(_this2.button);
				}
			});
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			this.unregister();
		}
	}, {
		key: 'on_click',
		value: function on_click(event) {
			event.preventDefault();

			var toggle = this.context.react_responsive_ui_menu.toggle;


			toggle();
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var _props = this.props,
			    link = _props.link,
			    title = _props.title,
			    style = _props.style,
			    className = _props.className;


			return _react2.default.createElement(
				'a',
				{
					ref: function ref(_ref) {
						return _this3.button = _ref;
					},
					href: link,
					onClick: this.on_click,
					title: title,
					className: (0, _classnames2.default)('rrui__slideout-menu-button', className),
					style: style },
				_react2.default.createElement(
					'svg',
					{
						className: 'rrui__slideout-menu-button__icon',
						viewBox: svg_canvas_dimensions },
					_react2.default.createElement('path', {
						d: svg_path,
						className: 'rrui__slideout-menu-button__icon-path' })
				)
			);
		}
	}]);

	return Menu_button;
}(_react.PureComponent);

// "Hamburger" icon (24x24)


Menu_button.propTypes = {
	// A URL of the "Menu" page:
	// if a web browser has javascript disabled (e.g. Tor),
	// then the menu button will redirect to this Menu page URL.
	// If not set then won't redirect anywhere.
	link: _propTypes2.default.string.isRequired,

	// HTML `title` attribute
	title: _propTypes2.default.string,

	// CSS class
	className: _propTypes2.default.string,

	// CSS style object
	style: _propTypes2.default.object
};
Menu_button.defaultProps = {
	link: '#'
};
Menu_button.contextTypes = _PageAndMenu2.default.childContextTypes;
exports.default = Menu_button;
var svg_canvas_dimensions = "0 0 24 24";
var svg_path = "M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z";
//# sourceMappingURL=MenuButton.js.map