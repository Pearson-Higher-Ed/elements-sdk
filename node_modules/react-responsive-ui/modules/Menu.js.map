{"version":3,"sources":["../source/Menu.js"],"names":["React","PureComponent","PropTypes","ReactDOM","classNames","PageAndMenu","Menu","state","show","context","router","react_responsive_ui_menu","register","toggle","unlisten_history","listen","location","unregister","hide","setState","element","findDOMNode","menu","props","className","style","children","ref","propTypes","object","string","contextTypes","childContextTypes"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA;;IACqBC,I;;;;;;;;;;;;;;gLAiBpBC,K,GACA;AACCC,SAAM;AADP,G;;;;;sCAKA;AAAA;;AAAA,kBAUG,KAAKC,OAVR;AAAA,OAGEC,MAHF,YAGEA,MAHF;AAAA,wCAIEC,wBAJF;AAAA,OAMGC,QANH,yBAMGA,QANH;AAAA,OAOGC,MAPH,yBAOGA,MAPH;AAAA,OAYSL,IAZT,GAYkB,KAAKD,KAZvB,CAYSC,IAZT;;AAcC;AACA;AACA;AACA;;AAEA;;AACA,OAAIE,MAAJ,EACA;AACC;AACA,SAAKI,gBAAL,GAAwBJ,OAAOK,MAAP,CAAc,UAACC,QAAD,EACtC;AACC,SAAI,OAAKT,KAAL,CAAWC,IAAf,EACA;AACCK;AACA;AACD,KANuB,CAAxB;AAOA;;AAED,QAAKI,UAAL,GAAkBL,SACjB;AACAM,UAAU;AAAA,YAAM,OAAKC,QAAL,CAAc,EAAEX,MAAM,KAAR,EAAd,CAAN;AAAA,KADV;AAEAK,YAAU;AAAA,YAAM,OAAKM,QAAL,CAAc;AAAA,aAAU,EAAEX,MAAM,CAACD,MAAMC,IAAf,EAAV;AAAA,MAAd,CAAN;AAAA,KAFV;AAGAY,aAAU;AAAA,YAAMjB,SAASkB,WAAT,CAAqB,OAAKC,IAA1B,CAAN;AAAA;AAHV,IADiB,CAAlB;;AAOA;AACA;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;yCAGA;AACC;;AAEA;AACA;AACA;AACA;;AAEA,QAAKL,UAAL;;AAEA,OAAI,KAAKH,gBAAT,EACA;AACC,SAAKA,gBAAL;AACA;AACD;;;2BAGD;AAAA;;AAAA,gBACwC,KAAKS,KAD7C;AAAA,OACSC,SADT,UACSA,SADT;AAAA,OACoBC,KADpB,UACoBA,KADpB;AAAA,OAC2BC,QAD3B,UAC2BA,QAD3B;AAAA,OAESlB,IAFT,GAEkB,KAAKD,KAFvB,CAESC,IAFT;;;AAIC,UACC;AAAA;AAAA;AACC,UAAM;AAAA,aAAO,OAAKc,IAAL,GAAYK,KAAnB;AAAA,MADP;AAEC,gBAAYvB,WAAW,qBAAX,EACZ;AACC,oCAA8BI;AAD/B,MADY,EAIZgB,SAJY,CAFb;AAOC,YAAQC,KAPT;AAQGC;AARH,IADD;AAYA;;AAED;AACA;AACA;AACA;AACA;;;;;EAzHiCzB,a;;AAAbK,I,CAEbsB,S,GACP;AACC;AACAH,QAAQvB,UAAU2B,MAFnB;;AAIC;AACAL,YAAYtB,UAAU4B;AALvB,C;AAHoBxB,I,CAWbyB,Y;AAENrB,SAASR,UAAU2B,M,IAChBxB,YAAY2B,iB;eAdI1B,I","file":"Menu.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ReactDOM from 'react-dom'\r\nimport classNames from 'classnames'\r\n\r\nimport PageAndMenu from './PageAndMenu'\r\n\r\n// A slideout menu\r\nexport default class Menu extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// CSS style object\r\n\t\tstyle : PropTypes.object,\r\n\r\n\t\t// CSS class\r\n\t\tclassName : PropTypes.string\r\n\t}\r\n\r\n\tstatic contextTypes =\r\n\t{\r\n\t\trouter : PropTypes.object, // .isRequired, // `react-router` may not be used at all\r\n\t\t...PageAndMenu.childContextTypes\r\n\t}\r\n\r\n\tstate =\r\n\t{\r\n\t\tshow: false\r\n\t}\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\trouter,\r\n\t\t\treact_responsive_ui_menu:\r\n\t\t\t{\r\n\t\t\t\tregister,\r\n\t\t\t\ttoggle\r\n\t\t\t}\r\n\t\t}\r\n\t\t= this.context\r\n\r\n\t\tconst { show } = this.state\r\n\r\n\t\t// if (!slideout)\r\n\t\t// {\r\n\t\t// \treturn\r\n\t\t// }\r\n\r\n\t\t// If `react-router` is being used\r\n\t\tif (router)\r\n\t\t{\r\n\t\t\t// Hide slideout menu on navigation\r\n\t\t\tthis.unlisten_history = router.listen((location) =>\r\n\t\t\t{\r\n\t\t\t\tif (this.state.show)\r\n\t\t\t\t{\r\n\t\t\t\t\ttoggle()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.unregister = register\r\n\t\t({\r\n\t\t\thide    : () => this.setState({ show: false }),\r\n\t\t\ttoggle  : () => this.setState(state => ({ show: !state.show })),\r\n\t\t\telement : () => ReactDOM.findDOMNode(this.menu)\r\n\t\t})\r\n\r\n\t\t// this.calculate_width()\r\n\t}\r\n\r\n\t// componentDidUpdate(previous_props, previous_state)\r\n\t// {\r\n\t// \t// On menu toggle\r\n\t// \tif (this.state.show !== previous_state.show)\r\n\t// \t{\r\n\t// \t\t// Requires a corresponding `clearTimeout()`` in `componentWillUnmount()``\r\n\t// \t\tsetTimeout(() =>\r\n\t// \t\t{\r\n\t// \t\t\tthis.setState({ page_moved_aside: this.state.show })\r\n\t// \t\t},\r\n\t// \t\tmenu_transition_duration)\r\n\t//\r\n\t// \t\tthis.calculate_width()\r\n\t// \t}\r\n\t// }\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\t// const { slideout } = this.props\r\n\r\n\t\t// if (!slideout)\r\n\t\t// {\r\n\t\t// \treturn\r\n\t\t// }\r\n\r\n\t\tthis.unregister()\r\n\r\n\t\tif (this.unlisten_history)\r\n\t\t{\r\n\t\t\tthis.unlisten_history()\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst { className, style, children } = this.props\r\n\t\tconst { show } = this.state\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={ ref => this.menu = ref }\r\n\t\t\t\tclassName={ classNames('rrui__slideout-menu',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__slideout-menu--shown': show\r\n\t\t\t\t},\r\n\t\t\t\tclassName) }\r\n\t\t\t\tstyle={ style }>\r\n\t\t\t\t{ children }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\t// calculate_width()\r\n\t// {\r\n\t// \tconst dom_node = ReactDOM.findDOMNode(this.menu)\r\n\t// \tthis.props.updateWidth(dom_node.offsetWidth)\r\n\t// }\r\n}"]}