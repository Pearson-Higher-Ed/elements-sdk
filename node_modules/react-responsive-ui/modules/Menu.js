var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import ReactDOM from 'react-dom';
import classNames from 'classnames';

import PageAndMenu from './PageAndMenu';

// A slideout menu

var Menu = function (_PureComponent) {
	_inherits(Menu, _PureComponent);

	function Menu() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, Menu);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Menu.__proto__ || Object.getPrototypeOf(Menu)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
			show: false
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(Menu, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this2 = this;

			var _context = this.context,
			    router = _context.router,
			    _context$react_respon = _context.react_responsive_ui_menu,
			    register = _context$react_respon.register,
			    toggle = _context$react_respon.toggle;
			var show = this.state.show;

			// if (!slideout)
			// {
			// 	return
			// }

			// If `react-router` is being used

			if (router) {
				// Hide slideout menu on navigation
				this.unlisten_history = router.listen(function (location) {
					if (_this2.state.show) {
						toggle();
					}
				});
			}

			this.unregister = register({
				hide: function hide() {
					return _this2.setState({ show: false });
				},
				toggle: function toggle() {
					return _this2.setState(function (state) {
						return { show: !state.show };
					});
				},
				element: function element() {
					return ReactDOM.findDOMNode(_this2.menu);
				}
			});

			// this.calculate_width()
		}

		// componentDidUpdate(previous_props, previous_state)
		// {
		// 	// On menu toggle
		// 	if (this.state.show !== previous_state.show)
		// 	{
		// 		// Requires a corresponding `clearTimeout()`` in `componentWillUnmount()``
		// 		setTimeout(() =>
		// 		{
		// 			this.setState({ page_moved_aside: this.state.show })
		// 		},
		// 		menu_transition_duration)
		//
		// 		this.calculate_width()
		// 	}
		// }

	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			// const { slideout } = this.props

			// if (!slideout)
			// {
			// 	return
			// }

			this.unregister();

			if (this.unlisten_history) {
				this.unlisten_history();
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var _props = this.props,
			    className = _props.className,
			    style = _props.style,
			    children = _props.children;
			var show = this.state.show;


			return React.createElement(
				'div',
				{
					ref: function ref(_ref2) {
						return _this3.menu = _ref2;
					},
					className: classNames('rrui__slideout-menu', {
						'rrui__slideout-menu--shown': show
					}, className),
					style: style },
				children
			);
		}

		// calculate_width()
		// {
		// 	const dom_node = ReactDOM.findDOMNode(this.menu)
		// 	this.props.updateWidth(dom_node.offsetWidth)
		// }

	}]);

	return Menu;
}(PureComponent);

Menu.propTypes = {
	// CSS style object
	style: PropTypes.object,

	// CSS class
	className: PropTypes.string
};
Menu.contextTypes = _extends({
	router: PropTypes.object }, PageAndMenu.childContextTypes);
export default Menu;
//# sourceMappingURL=Menu.js.map