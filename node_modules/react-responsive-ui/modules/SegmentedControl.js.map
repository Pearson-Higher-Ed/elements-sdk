{"version":3,"sources":["../source/SegmentedControl.js"],"names":["React","PureComponent","PropTypes","ReactDOM","classNames","submitFormOnCtrlEnter","Segmented_control","state","storeContainerComponent","container","_","onKeyDown","event","props","ctrlKey","altKey","shiftKey","metaKey","onChange","options","keyCode","preventDefault","previous_option_index","undefined","focus","value","next_option_index","fallback","setState","javascript","disabled","indicateInvalid","error","style","className","map","option","index","render_button","render_static","selected","first","last","length","ref","chooser","label","render_static_option","name","previous_value","findDOMNode","button_0","i","propTypes","arrayOf","shape","string","isRequired","bool","any","func","object","defaultProps"],"mappings":"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","file":"SegmentedControl.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ReactDOM from 'react-dom'\r\nimport classNames from 'classnames'\r\n\r\nimport { submitFormOnCtrlEnter } from './utility/dom'\r\n\r\nexport default class Segmented_control extends PureComponent\r\n{\r\n\tstate = {}\r\n\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// A list of selectable options\r\n\t\toptions : PropTypes.arrayOf\r\n\t\t(\r\n\t\t\tPropTypes.shape\r\n\t\t\t({\r\n\t\t\t\t// Option value\r\n\t\t\t\tvalue: PropTypes.string.isRequired,\r\n\t\t\t\t// Option label\r\n\t\t\t\tlabel: PropTypes.string.isRequired\r\n\t\t\t})\r\n\t\t)\r\n\t\t.isRequired,\r\n\r\n\t\t// HTML form input `name` attribute\r\n\t\tname         : PropTypes.string,\r\n\r\n\t\t// If `true` then will be disabled\r\n\t\tdisabled     : PropTypes.bool,\r\n\r\n\t\t// The selected option value\r\n\t\tvalue        : PropTypes.any,\r\n\r\n\t\t// Is called when an option is selected\r\n\t\tonChange     : PropTypes.func.isRequired,\r\n\r\n\t\t// (exotic use case)\r\n\t\t// Falls back to a plain HTML input\r\n\t\t// when javascript is disabled (e.g. Tor)\r\n\t\tfallback  : PropTypes.bool.isRequired,\r\n\r\n\t\t// CSS class\r\n\t\tclassName    : PropTypes.string,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle        : PropTypes.object\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\tfallback : false\r\n\t}\r\n\r\n\t// Client side rendering, javascript is enabled\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tconst { fallback } = this.props\r\n\r\n\t\tif (fallback)\r\n\t\t{\r\n\t\t\tthis.setState({ javascript: true })\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tdisabled,\r\n\t\t\toptions,\r\n\t\t\tfallback,\r\n\t\t\tindicateInvalid,\r\n\t\t\terror,\r\n\t\t\tstyle,\r\n\t\t\tclassName\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={ this.storeContainerComponent }\r\n\t\t\t\tonKeyDown={ this.onKeyDown }\r\n\t\t\t\tclassName={ classNames('rrui__segmented-control',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__rich'                        : fallback,\r\n\t\t\t\t\t'rrui__segmented-control--disabled' : disabled\r\n\t\t\t\t},\r\n\t\t\t\tclassName) }\r\n\t\t\t\tstyle={ style }>\r\n\r\n\t\t\t\t<div className=\"rrui__input\">\r\n\t\t\t\t\t{ options.map((option, index) => this.render_button(option, index)) }\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{ fallback && !this.state.javascript && this.render_static() }\r\n\r\n\t\t\t\t{ indicateInvalid && error && <div className=\"rrui__input-error\">{ error }</div> }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trender_button(option, index)\r\n\t{\r\n\t\tconst { options, value, disabled } = this.props\r\n\r\n\t\tconst selected = value === option.value\r\n\r\n\t\tconst first = index === 0\r\n\t\tconst last  = index === options.length - 1\r\n\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tkey={ option.value }\r\n\t\t\t\tref={ ref => this[`button_${index}`] = ref }\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\ttabIndex={ index === 0 ? undefined : '-1' }\r\n\t\t\t\tdisabled={ disabled }\r\n\t\t\t\tonClick={ this.chooser(option.value) }\r\n\t\t\t\tclassName={ classNames\r\n\t\t\t\t(\r\n\t\t\t\t\t'rrui__button-reset',\r\n\t\t\t\t\t'rrui__segmented-control__option',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'rrui__segmented-control__option--selected' : selected,\r\n\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t'rrui__segmented-control__option--disabled' : disabled,\r\n\t\t\t\t\t\t// Ordering\r\n\t\t\t\t\t\t'rrui__segmented-control__option--first'    : first,\r\n\t\t\t\t\t\t'rrui__segmented-control__option--last'     : last,\r\n\t\t\t\t\t\t'rrui__segmented-control__option--middle'   : !first && !last\r\n\t\t\t\t\t}\r\n\t\t\t\t) }>\r\n\t\t\t\t{ option.label }\r\n\t\t\t</button>\r\n\t\t)\r\n\t}\r\n\r\n\t// supports disabled javascript\r\n\trender_static()\r\n\t{\r\n\t\tconst { options } = this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"rrui__rich__fallback\">\r\n\t\t\t\t{ options.map((option, index) => this.render_static_option(option, index)) }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trender_static_option(option, index)\r\n\t{\r\n\t\tconst { options, name, value } = this.props\r\n\r\n\t\tconst first = index === 0\r\n\t\tconst last  = index === options.length - 1\r\n\r\n\t\treturn (\r\n\t\t\t<span\r\n\t\t\t\tkey={ option.value }\r\n\t\t\t\tclassName={ classNames('rrui__button-reset', 'rrui__segmented-control__option',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__segmented-control__option--first'  : first,\r\n\t\t\t\t\t'rrui__segmented-control__option--last'   : last,\r\n\t\t\t\t\t'rrui__segmented-control__option--middle' : !first && !last\r\n\t\t\t\t}) }>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\tname={ name }\r\n\t\t\t\t\tchecked={ value === option.value }/>\r\n\t\t\t\t{ option.label }\r\n\t\t\t</span>\r\n\t\t)\r\n\t}\r\n\r\n\tchooser(value)\r\n\t{\r\n\t\treturn (event) =>\r\n\t\t{\r\n\t\t\tconst { disabled, onChange, value: previous_value } = this.props\r\n\r\n\t\t\tif (disabled)\r\n\t\t\t{\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\t// Call `onChange` only if `value` did actually change\r\n\t\t\tif (value !== previous_value)\r\n\t\t\t{\r\n\t\t\t\tonChange(value)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfocus()\r\n\t{\r\n\t\tReactDOM.findDOMNode(this.button_0).focus()\r\n\t}\r\n\r\n\tstoreContainerComponent = _ => this.container = _\r\n\r\n\tonKeyDown = (event) =>\r\n\t{\r\n\t\tconst { onKeyDown } = this.props\r\n\r\n\t\tif (onKeyDown)\r\n\t\t{\r\n\t\t\tonKeyDown(event)\r\n\t\t}\r\n\r\n\t\tif (submitFormOnCtrlEnter(event, this.container))\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst { onChange, options } = this.props\r\n\r\n\t\tswitch (event.keyCode)\r\n\t\t{\r\n\t\t\t// Select the previous option (if present) on left arrow\r\n\t\t\tcase 37:\r\n\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\tconst previous_option_index = this.previous_option_index()\r\n\r\n\t\t\t\tif (previous_option_index !== undefined)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Focus the option <button/> so that\r\n\t\t\t\t\t// a subsequent \"Spacebar\" keyDown\r\n\t\t\t\t\t// doesn't select the previously selected\r\n\t\t\t\t\t// option (e.g. the first one)\r\n\t\t\t\t\tthis[`button_${previous_option_index}`].focus()\r\n\r\n\t\t\t\t\t// Change the `value`\r\n\t\t\t\t\treturn onChange(options[previous_option_index].value)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\r\n\r\n\t\t\t// Select the next option (if present) on right arrow\r\n\t\t\tcase 39:\r\n\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\tconst next_option_index = this.next_option_index()\r\n\r\n\t\t\t\tif (next_option_index !== undefined)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Focus the option <button/> so that\r\n\t\t\t\t\t// a subsequent \"Spacebar\" keyDown\r\n\t\t\t\t\t// doesn't select the previously selected\r\n\t\t\t\t\t// option (e.g. the first one)\r\n\t\t\t\t\tthis[`button_${next_option_index}`].focus()\r\n\r\n\t\t\t\t\t// Change the `value`\r\n\t\t\t\t\treturn onChange(options[next_option_index].value)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\t// Get the previous option index (relative to the currently selected option)\r\n\tprevious_option_index()\r\n\t{\r\n\t\tconst { options, value } = this.props\r\n\r\n\t\tlet i = 0\r\n\t\twhile (i < options.length)\r\n\t\t{\r\n\t\t\tif (options[i].value === value)\r\n\t\t\t{\r\n\t\t\t\tif (i - 1 >= 0)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn i - 1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n\r\n\t// Get the next option index (relative to the currently selected option)\r\n\tnext_option_index()\r\n\t{\r\n\t\tconst { options, value } = this.props\r\n\r\n\t\tlet i = 0\r\n\t\twhile (i < options.length)\r\n\t\t{\r\n\t\t\tif (options[i].value === value)\r\n\t\t\t{\r\n\t\t\t\tif (i + 1 < options.length)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn i + 1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n}"]}