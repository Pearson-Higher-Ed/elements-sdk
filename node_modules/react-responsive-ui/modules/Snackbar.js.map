{"version":3,"sources":["../source/Snackbar.js"],"names":["React","PureComponent","PropTypes","ReactDOM","classNames","Snackbar","state","values","next","props","hideAnimationDuration","minTime","lengthTimeFactor","value","shift","setState","height","undefined","hiding","auto_hide_timer","setTimeout","show","show_next_snack_timeout","duration","content","length","clearTimeout","show_snack_timeout","new_props","reset","push","new_value","findDOMNode","snackbar","offsetHeight","anti_lag_timeout","type","y","container_style","visibility","transform","transition","snackbar_text_style","opacity","overflow","ref","propTypes","oneOfType","string","shape","node","number","func","isRequired","defaultProps"],"mappings":"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","file":"Snackbar.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ReactDOM from 'react-dom'\r\nimport classNames from 'classnames'\r\n\r\n// Sits at the bottom of a page and displays notifications\r\nexport default class Snackbar extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// Snackbar value (either a message, or an object)\r\n\t\tvalue : PropTypes.oneOfType\r\n\t\t([\r\n\t\t\tPropTypes.string,\r\n\t\t\tPropTypes.shape\r\n\t\t\t({\r\n\t\t\t\tcontent  : PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\r\n\t\t\t\ttype     : PropTypes.string,\r\n\t\t\t\tduration : PropTypes.number\r\n\t\t\t})\r\n\t\t]),\r\n\r\n\t\t// Must reset the `value`.\r\n\t\treset : PropTypes.func.isRequired,\r\n\r\n\t\t// \"Snack\" hiding CSS animation duration.\r\n\t\t// Is 400 milliseconds by default.\r\n\t\thideAnimationDuration : PropTypes.number.isRequired,\r\n\r\n\t\t// The total display duration (in milliseconds) of a snack\r\n\t\t// is `minTime + message.length * lengthTimeFactor`\r\n\t\tminTime          : PropTypes.number.isRequired,\r\n\t\tlengthTimeFactor : PropTypes.number.isRequired\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\thideAnimationDuration : 400,\r\n\t\tminTime          : 1200,\r\n\t\tlengthTimeFactor : 60\r\n\t}\r\n\r\n\tstate =\r\n\t{\r\n\t\tvalues: []\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tclearTimeout(this.auto_hide_timer)\r\n\t\tclearTimeout(this.show_next_snack_timeout)\r\n\t\tclearTimeout(this.show_snack_timeout)\r\n\r\n\t\tthis.auto_hide_timer = undefined\r\n\t\tthis.show_next_snack_timeout = undefined\r\n\t\tthis.show_snack_timeout = undefined\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(new_props)\r\n\t{\r\n\t\tlet { value, reset } = new_props\r\n\r\n\t\t// Redux has an optimization built in:\r\n\t\t// it won't rerender a `@connect`ed component\r\n\t\t// if its new `props` are shallowly equal to the previous ones.\r\n\t\t// Therefore, manually resetting the `value` property here\r\n\t\t// immediately after receiving it (a non-`undefined` value)\r\n\t\t// so that the same notification message could later be displayed.\r\n\t\tif (value)\r\n\t\t{\r\n\t\t\t// Normalize value (make it a plain javascript object)\r\n\t\t\t// if it's a string or a react element.\r\n\t\t\tif (!(typeof value === 'object' && !value.props))\r\n\t\t\t{\r\n\t\t\t\tvalue = { content: value }\r\n\t\t\t}\r\n\r\n\t\t\t// Add the notification to the queue\r\n\t\t\tthis.push(value)\r\n\t\t\t// Reset the `value` property immediately\r\n\t\t\treset()\r\n\t\t}\r\n\t}\r\n\r\n\t// Adds a notification to the queue\r\n\tpush(new_value)\r\n\t{\r\n\t\tconst { values, value } = this.state\r\n\r\n\t\t// Add the notification to the queue\r\n\t\tvalues.push(new_value)\r\n\r\n\t\t// If the notification queue was empty\r\n\t\t// then kick-start it.\r\n\t\tif (!value)\r\n\t\t{\r\n\t\t\tthis.next()\r\n\t\t}\r\n\t}\r\n\r\n\t// Displays the next notification in the queue\r\n\tnext = () =>\r\n\t{\r\n\t\tconst { values } = this.state\r\n\r\n\t\tconst\r\n\t\t{\r\n\t\t\thideAnimationDuration,\r\n\t\t\tminTime,\r\n\t\t\tlengthTimeFactor\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\t// Get the next notification from the queue\r\n\t\t// (will be `undefined` if the queue is empty)\r\n\t\tconst value = values.shift()\r\n\r\n\t\t// Reset the notification display\r\n\t\tthis.setState({ value, height: undefined, hiding: false })\r\n\r\n\t\t// If the queue is empty, then just exit\r\n\t\tif (!value)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// `state.show` will be set to `true` later,\r\n\t\t// when the height of the element is measured\r\n\t\t// (which is after it renders)\r\n\r\n\t\t// Hide the notification after it expires\r\n\t\tthis.auto_hide_timer = setTimeout(() =>\r\n\t\t{\r\n\t\t\t// Clearing memory\r\n\t\t\tthis.auto_hide_timer = undefined\r\n\r\n\t\t\t// Start the hiding animation for the notification\r\n\t\t\tthis.setState({ show: false, hiding: true })\r\n\r\n\t\t\t// Display the next notification\r\n\t\t\t// after the currently being hidden one\r\n\t\t\t// finishes its hiding animation.\r\n\t\t\tthis.show_next_snack_timeout = setTimeout(() =>\r\n\t\t\t{\r\n\t\t\t\tthis.show_next_snack_timeout = undefined\r\n\t\t\t\tthis.next()\r\n\t\t\t},\r\n\t\t\thideAnimationDuration)\r\n\t\t},\r\n\t\t// The total display duration (in milliseconds) of a snack\r\n\t\t// is `minTime + message.length * lengthTimeFactor`\r\n\t\tvalue.duration || (minTime + (typeof value.content === 'string' ? value.content.length * lengthTimeFactor : 0)))\r\n\t}\r\n\r\n\tcomponentDidUpdate()\r\n\t{\r\n\t\tlet { height, value } = this.state\r\n\r\n\t\t// The notification DOM element has just been rendered\r\n\t\t// which means its dimensions are set by now.\r\n\t\t// Calculate the notification container DOM element height\r\n\t\t// so that the slide-from-bottom animation knows\r\n\t\t// its target Y-position for the CSS `translate` transform.\r\n\t\tif (height === undefined && value)\r\n\t\t{\r\n\t\t\theight = ReactDOM.findDOMNode(this.snackbar).offsetHeight\r\n\t\t\tconst anti_lag_timeout = 100 // Otherwise it would jump to fully shown in Chrome when there's a queue of snacks waiting to be shown\r\n\t\t\tthis.setState({ height }, () =>\r\n\t\t\t{\r\n\t\t\t\tthis.show_snack_timeout = setTimeout(() =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.show_snack_timeout = undefined\r\n\t\t\t\t\tthis.setState({ show: true })\r\n\t\t\t\t},\r\n\t\t\t\tanti_lag_timeout)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst { hideAnimationDuration, type } = this.props\r\n\t\tconst { show, value, height, hiding } = this.state\r\n\r\n\t\tlet y = 0\r\n\r\n\t\t// If no snack is being shown,\r\n\t\t// or if a snack is about to be shown,\r\n\t\t// then shift it under the screen's bottom border\r\n\t\t// to show the slide-from-bottom animation at the next step.\r\n\t\tif (!show && height !== undefined)\r\n\t\t{\r\n\t\t\ty = `${height}px`\r\n\t\t}\r\n\r\n\t\tconst container_style =\r\n\t\t{\r\n\t\t\tvisibility : show ? 'visible' : 'hidden',\r\n\t\t\ttransform  : `translateY(${y})`,\r\n\t\t\ttransition : `transform ${hideAnimationDuration}ms ease-out, visibility ${hideAnimationDuration}ms ease-out`\r\n\t\t}\r\n\r\n\t\tif (!show && !hiding)\r\n\t\t{\r\n\t\t\tcontainer_style.transition = 'none'\r\n\t\t}\r\n\r\n\t\tconst snackbar_text_style =\r\n\t\t{\r\n\t\t\topacity    : show ? 1 : 0,\r\n\t\t\ttransition : `opacity ${hideAnimationDuration}ms cubic-bezier(0.23, 1, 0.32, 1) 0ms`,\r\n\t\t\toverflow   : 'hidden'\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={ container_style }\r\n\t\t\t\tclassName=\"rrui__snackbar__container\">\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={ ref => this.snackbar = ref }\r\n\t\t\t\t\tclassName={ classNames('rrui__snackbar', value && value.type && `rrui__snackbar--${value.type}`) }>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={ snackbar_text_style }\r\n\t\t\t\t\t\tclassName=\"rrui__snackbar__text\">\r\n\t\t\t\t\t\t{ value && value.content }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"]}