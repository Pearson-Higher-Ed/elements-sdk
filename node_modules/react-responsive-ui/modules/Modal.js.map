{"version":3,"sources":["../source/Modal.js"],"names":["React","Component","PropTypes","ReactDOM","classNames","ReactModal","Button","Form","Modal","state","form","register_form","setState","unregister_form","unmounted","on_request_close","event","closeLabel","props","type","indicate_cannot_close","findDOMNode","content","parentNode","focus","close_if_not_busy","busy","wait","close","closeTimeout","could_not_close_because_busy","on_after_open","afterOpen","adjust_scrollbar_after_open","on_after_close","afterClose","reset","adjust_scrollbar_after_close","context","rrui__modal","nextProps","unmount","isOpen","reset_content_scroll","clearTimeout","could_not_close_because_busy_animation_timeout","undefined","fullscreen","contentLabel","title","closeButton","closeButtonIcon","actions","style","className","overlayClassName","children","react_modal_style","ref","could_not_close_because_busy_animation_duration","setTimeout","document","querySelector","scrollTop","div","createElement","position","left","right","body","appendChild","width_before","clientWidth","overflow","width_adjustment","removeChild","get_full_width_elements","element","marginRight","bodyOverflowX","bodyOverflowY","overflowX","overflowY","propTypes","bool","isRequired","func","number","node","string","object","defaultProps","childContextTypes","ModalContent","render_close_button","overlay","top","bottom","full_width_elements","slice","call","querySelectorAll","push"],"mappings":"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","file":"Modal.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ReactDOM from 'react-dom'\r\nimport classNames from 'classnames'\r\nimport ReactModal from 'react-modal'\r\n\r\nimport Button from './Button'\r\nimport Form from './Form'\r\n\r\n// Make sure to add `.rrui__fixed-full-width` CSS class\r\n// to all full-width `position: fixed` elements.\r\n// Such elements must not be `width: 100%`\r\n// but rather `width: auto` or `left: 0; right: 0;`.\r\nexport default class Modal extends Component\r\n{\r\n\tstate =\r\n\t{\r\n\t\t// Using a counter instead of a boolean here\r\n\t\t// because a new form may be mounted before the old one is unmounted.\r\n\t\t// (React reconciliation algorythm implementation details)\r\n\t\tform : 0\r\n\t}\r\n\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// If `true` then the modal is shown\r\n\t\tisOpen           : PropTypes.bool.isRequired,\r\n\r\n\t\t// Closes the modal (must set the `isOpen` flag to `false`)\r\n\t\tclose            : PropTypes.func.isRequired,\r\n\r\n\t\t// A time required for CSS hiding animation to complete\r\n\t\t// (150 milliseconds by default)\r\n\t\tcloseTimeout     : PropTypes.number.isRequired,\r\n\r\n\t\t// Is called after the modal is shown\r\n\t\tafterOpen        : PropTypes.func,\r\n\r\n\t\t// Is called after the modal is closed\r\n\t\tafterClose       : PropTypes.func,\r\n\r\n\t\t// Enters fullscreen mode\r\n\t\tfullscreen       : PropTypes.bool,\r\n\r\n\t\t// Modal content\r\n\t\tchildren         : PropTypes.node,\r\n\r\n\t\t// Resets the modal on close\r\n\t\t// (e.g. could reset edited form fields)\r\n\t\treset            : PropTypes.func,\r\n\r\n\t\t// \"Cancel\" button label.\r\n\t\t// If set, the modal will have a \"Cancel\" button.\r\n\t\t// (only if `<Form.Actions/>` is found in content)\r\n\t\tcloseLabel       : PropTypes.string,\r\n\r\n\t\t// The default `overflow-x` of the <body/>.\r\n\t\t// Is `auto` by default.\r\n\t\tbodyOverflowX    : PropTypes.string.isRequired,\r\n\r\n\t\t// The default `overflow-x` of the <body/>.\r\n\t\t// Is `scroll` by default\r\n\t\t// (which is better than `auto`\r\n\t\t//  because the document width won't be jumpy\r\n\t\t//  while navigating the website —\r\n\t\t//  it will be consistent across all pages)\r\n\t\tbodyOverflowY    : PropTypes.string.isRequired,\r\n\r\n\t\t// `aria-label` for the modal.\r\n\t\t// (is \"Popup\" by default)\r\n\t\tcontentLabel     : PropTypes.string.isRequired,\r\n\r\n\t\t// An optional close button (like a cross).\r\n\t\t// This is not actually a \"button\"\r\n\t\t// but instead \"button contents\",\r\n\t\t// i.e. `closeButton` will be wrapped with a `<button/>`.\r\n\t\tcloseButton      : PropTypes.node,\r\n\r\n\t\tcloseButtonIcon  : PropTypes.func,\r\n\r\n\t\t// If set to `false` will prevent modal contents\r\n\t\t// from being unmounted when the modal is closed.\r\n\t\tunmount          : PropTypes.bool.isRequired,\r\n\r\n\t\t// Internal property\r\n\t\tcould_not_close_because_busy_animation_duration : PropTypes.number.isRequired,\r\n\r\n\t\t// CSS class for overlay (e.g. for fullscreen modal background color)\r\n\t\toverlayClassName : PropTypes.string,\r\n\r\n\t\t// CSS class\r\n\t\tclassName        : PropTypes.string,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle            : PropTypes.object\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\tisOpen : false,\r\n\r\n\t\tbodyOverflowX : 'auto',\r\n\t\t// Prevents document width from jumping due to the\r\n\t\t// vertical scrollbar appearance/disappearance\r\n\t\tbodyOverflowY : 'scroll',\r\n\r\n\t\t// when changing this also change\r\n\t\t// your .ReactModal__Overlay and .ReactModal__Content\r\n\t\t// css transition times accordingly\r\n\t\tcloseTimeout : 150, // ms\r\n\r\n\t\tcontentLabel : 'Popup',\r\n\r\n\t\t// Modal contents are unmounted when the modal is closed by default\r\n\t\tunmount : true,\r\n\r\n\t\t// When changing this also change\r\n\t\t// `.rrui__modal--could-not-close-because-busy`\r\n\t\t// css transition time accordingly\r\n\t\tcould_not_close_because_busy_animation_duration: 600 // ms\r\n\t}\r\n\r\n\tstatic childContextTypes =\r\n\t{\r\n\t\trrui__modal : PropTypes.object\r\n\t}\r\n\r\n\tgetChildContext()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tcloseLabel\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst context =\r\n\t\t{\r\n\t\t\trrui__modal:\r\n\t\t\t{\r\n\t\t\t\tcloseLabel,\r\n\t\t\t\tclose_if_not_busy : this.close_if_not_busy,\r\n\t\t\t\tregister_form     : this.register_form,\r\n\t\t\t\tunregister_form   : this.unregister_form\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn context\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps)\r\n\t{\r\n\t\tconst { unmount, isOpen } = this.props\r\n\r\n\t\tif (!unmount)\r\n\t\t{\r\n\t\t\tif (!isOpen && nextProps.isOpen)\r\n\t\t\t{\r\n\t\t\t\tthis.on_after_open()\r\n\t\t\t}\r\n\t\t\telse if (isOpen && !nextProps.isOpen)\r\n\t\t\t{\r\n\t\t\t\tthis.on_after_close()\r\n\t\t\t\tthis.reset_content_scroll()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// A modal itself umounts only when the user leaves a page,\r\n\t// so in a \"Single Page Application\", for example,\r\n\t// if this was a regular popup and a user could still navigate\r\n\t// away via a hyperlink then this code becomes neccessary.\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tconst { isOpen } = this.props\r\n\r\n\t\tthis.unmounted = true\r\n\r\n\t\t// If the modal is still open\r\n\t\t// while a user navigates away\r\n\t\t// then \"close\" it properly\r\n\t\t// (restore the document scrollbars, etc).\r\n\t\tif (isOpen)\r\n\t\t{\r\n\t\t\tthis.on_after_close()\r\n\t\t}\r\n\r\n\t\tclearTimeout(this.could_not_close_because_busy_animation_timeout)\r\n\t\tthis.could_not_close_because_busy_animation_timeout = undefined\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tbusy,\r\n\t\t\twait,\r\n\t\t\tfullscreen,\r\n\t\t\tisOpen,\r\n\t\t\tcloseTimeout,\r\n\t\t\tcontentLabel,\r\n\t\t\ttitle,\r\n\t\t\tcloseLabel,\r\n\t\t\tcloseButton,\r\n\t\t\tcloseButtonIcon,\r\n\t\t\tactions,\r\n\t\t\tunmount,\r\n\t\t\tstyle,\r\n\t\t\tclassName,\r\n\t\t\toverlayClassName,\r\n\t\t\tchildren\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst\r\n\t\t{\r\n\t\t\tcould_not_close_because_busy,\r\n\t\t\tform\r\n\t\t}\r\n\t\t= this.state\r\n\r\n\t\treturn (\r\n\t\t\t<ReactModal\r\n\t\t\t\tisOpen={ unmount ? isOpen : true }\r\n\t\t\t\tonAfterOpen={ unmount ? this.on_after_open : undefined }\r\n\t\t\t\tonRequestClose={ this.on_request_close }\r\n\t\t\t\tcloseTimeoutMS={ closeTimeout }\r\n\t\t\t\tcontentLabel={ contentLabel }\r\n\t\t\t\tariaHideApp={ false }\r\n\t\t\t\tstyle={ react_modal_style }\r\n\t\t\t\toverlayClassName={ classNames('rrui__modal__overlay',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__modal__overlay--busy'       : busy || wait,\r\n\t\t\t\t\t'rrui__modal__overlay--fullscreen' : fullscreen,\r\n\t\t\t\t\t'rrui__modal__overlay--hidden'     : !unmount && !isOpen\r\n\t\t\t\t},\r\n\t\t\t\toverlayClassName) }\r\n\t\t\t\tclassName={ classNames('rrui__modal__container',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__modal__container--fullscreen' : fullscreen\r\n\t\t\t\t}) }>\r\n\r\n\t\t\t\t{/* Top margin, grows less than bottom margin */}\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={ classNames('rrui__modal__vertical-margin', 'rrui__modal__vertical-margin--top',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t'rrui__modal__vertical-margin--fullscreen' : fullscreen\r\n\t\t\t\t\t}) }\r\n\t\t\t\t\tonClick={ this.on_request_close }/>\r\n\r\n\t\t\t\t{/* Modal window content */}\r\n\r\n\t\t\t\t<ModalContent\r\n\t\t\t\t\tref={ ref => this.content = ref }\r\n\t\t\t\t\tcloseLabel={ closeLabel }\r\n\t\t\t\t\tcloseButton={ closeButton }\r\n\t\t\t\t\tcloseButtonIcon={ closeButtonIcon }\r\n\t\t\t\t\tclose={ this.close_if_not_busy }\r\n\t\t\t\t\tstyle={ style }\r\n\t\t\t\t\tclassName={ className }\r\n\t\t\t\t\tfullscreen={ fullscreen }\r\n\t\t\t\t\tcould_not_close_because_busy={ could_not_close_because_busy }\r\n\t\t\t\t\tform={ form }\r\n\t\t\t\t\tbusy={ busy || wait }\r\n\t\t\t\t\treset={ this.on_after_close }>\r\n\t\t\t\t\t{ children }\r\n\t\t\t\t</ModalContent>\r\n\r\n\t\t\t\t{/* Bottom margin, grows more than top margin */}\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={ classNames('rrui__modal__vertical-margin', 'rrui__modal__vertical-margin--bottom',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t'rrui__modal__vertical-margin--fullscreen' : fullscreen\r\n\t\t\t\t\t}) }\r\n\t\t\t\t\tonClick={ this.on_request_close }/>\r\n\t\t\t</ReactModal>\r\n\t\t)\r\n\t}\r\n\r\n\tregister_form = () =>\r\n\t{\r\n\t\t// Using a counter instead of a boolean here\r\n\t\t// because a new form may be mounted before the old one is unmounted.\r\n\t\t// (React reconciliation algorythm implementation details)\r\n\t\tthis.setState(({ form }) => ({ form: form + 1 }))\r\n\t}\r\n\r\n\tunregister_form = () =>\r\n\t{\r\n\t\tif (this.unmounted)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Using a counter instead of a boolean here\r\n\t\t// because a new form may be mounted before the old one is unmounted.\r\n\t\t// (React reconciliation algorythm implementation details)\r\n\t\tthis.setState(({ form }) => ({ form: form - 1 }))\r\n\t}\r\n\r\n\t// Play \"cannot close\" animation on the modal\r\n\tindicate_cannot_close()\r\n\t{\r\n\t\tconst { could_not_close_because_busy_animation_duration } = this.props\r\n\t\tconst { could_not_close_because_busy } = this.state\r\n\r\n\t\tif (!could_not_close_because_busy)\r\n\t\t{\r\n\t\t\tthis.could_not_close_because_busy_animation_timeout = setTimeout(() =>\r\n\t\t\t{\r\n\t\t\t\tthis.could_not_close_because_busy_animation_timeout = undefined\r\n\t\t\t\tthis.setState({ could_not_close_because_busy: false })\r\n\t\t\t},\r\n\t\t\t// Give it a bit of extra time to finish the CSS animation\r\n\t\t\tcould_not_close_because_busy_animation_duration * 1.1)\r\n\r\n\t\t\tthis.setState({ could_not_close_because_busy: true })\r\n\t\t}\r\n\t}\r\n\r\n\ton_request_close = (event) =>\r\n\t{\r\n\t\tconst { closeLabel } = this.props\r\n\t\tconst { form } = this.state\r\n\r\n\t\t// If the modal has an explicit \"Cancel\" button,\r\n\t\t// then allow closing it by hitting \"Escape\" key,\r\n\t\t// but don't close it on a click outside.\r\n\t\t// (because a user wouldn't want to loose form data due to a misclick)\r\n\t\tif (closeLabel && form && event && event.type !== 'keydown')\r\n\t\t{\r\n\t\t\tthis.indicate_cannot_close()\r\n\t\t\treturn ReactDOM.findDOMNode(this.content).parentNode.focus()\r\n\t\t}\r\n\r\n\t\tthis.close_if_not_busy()\r\n\t}\r\n\r\n\tclose_if_not_busy = () =>\r\n\t{\r\n\t\tconst { busy, wait, close, closeTimeout } = this.props\r\n\r\n\t\t// For weird messed development mode cases\r\n\t\tif (this.unmounted)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Don't close the modal if it's busy\r\n\t\tif (busy || wait)\r\n\t\t{\r\n\t\t\treturn this.indicate_cannot_close()\r\n\t\t}\r\n\r\n\t\t// Abruptly end \"couldn't close\" animation to make room for closing animation\r\n\t\tthis.setState({ could_not_close_because_busy: false })\r\n\r\n\t\t// Close the modal\r\n\t\tif (close)\r\n\t\t{\r\n\t\t\tclose()\r\n\t\t}\r\n\t}\r\n\r\n\t// If the user scrolled on a previously shown react-modal,\r\n\t// then reset that previously scrolled position.\r\n\treset_content_scroll()\r\n\t{\r\n\t\tdocument.querySelector('.ReactModal__Overlay').scrollTop = 0\r\n\t}\r\n\r\n\t// Hides the main (body) scrollbar upon showing a modal\r\n\t// and also adjusts the width of all \"full-width\" elements\r\n\t// so that they don't expand no that the scrollbar is absent.\r\n\t//\r\n\t// This doesn't account for window resizes\r\n\t// but since my body is always `overflow: visible` (a good practice)\r\n\t// there's no difference and it should work in any scenario.\r\n\t//\r\n\tadjust_scrollbar_after_open()\r\n\t{\r\n\t\t// A dummy `<div/>` to measure\r\n\t\t// the difference in width\r\n\t\t// needed for the \"full-width\" elements\r\n\t\t// after the main (body) scrollbar is deliberately hidden.\r\n\t\tconst div = document.createElement('div')\r\n\t\tdiv.style.position = 'fixed'\r\n\t\tdiv.style.left     = 0\r\n\t\tdiv.style.right    = 0\r\n\t\tdocument.body.appendChild(div)\r\n\r\n\t\t// Calculate the width of the dummy `<div/>`\r\n\t\t// before the main (body) scrollbar is deliberately hidden.\r\n\t\tconst width_before = div.clientWidth\r\n\r\n\t\t// Hide the main (body) scrollbar\r\n\t\t// so that when a user scrolls in an open modal\r\n\t\t// this `scroll` event doesn't go through\r\n\t\t// and scroll the main page.\r\n\t\tdocument.body.style.overflow = 'hidden'\r\n\r\n\t\t// All \"full-width\" elements will need their\r\n\t\t// width to be adjusted by this amount\r\n\t\t// because of the now-hidden main (body) scrollbar\r\n\r\n\t\t// Calculate the width of the dummy `<div/>`\r\n\t\t// after the main (body) scrollbar is deliberately hidden.\r\n\t\tconst width_adjustment = div.clientWidth - width_before\r\n\r\n\t\tdocument.body.removeChild(div)\r\n\r\n\t\t// \"full-width\" elements include `document.body`\r\n\t\t// and all `position: fixed` elements\r\n\t\t// which should be marked with this special CSS class.\r\n\t\t//\r\n\t\t// Make sure to add `.rrui__fixed-full-width` CSS class\r\n\t\t// to all full-width `position: fixed` elements.\r\n\t\t// Such elements must not be `width: 100%`\r\n\t\t// but rather `width: auto` or `left: 0; right: 0;`.\r\n\t\t//\r\n\t\t// Adjusts the width of all \"full-width\" elements\r\n\t\t// so that they don't expand by the width of the (now absent) scrollbar\r\n\t\t//\r\n\t\tfor (const element of get_full_width_elements())\r\n\t\t{\r\n\t\t\telement.style.marginRight = width_adjustment + 'px'\r\n\t\t}\r\n\r\n\t\tthis.reset_content_scroll()\r\n\t}\r\n\r\n\ton_after_open = () =>\r\n\t{\r\n\t\tconst { afterOpen } = this.props\r\n\r\n\t\tthis.adjust_scrollbar_after_open()\r\n\r\n\t\tif (afterOpen)\r\n\t\t{\r\n\t\t\tafterOpen()\r\n\t\t}\r\n\t}\r\n\r\n\t// Restores original `document` scrollbar.\r\n\tadjust_scrollbar_after_close()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tbodyOverflowX,\r\n\t\t\tbodyOverflowY\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\t// All \"full-width\" elements will need their\r\n\t\t// width to be restored back to the original value\r\n\t\t// now that the main (body) scrollbar is being restored.\r\n\r\n\t\t// \"full-width\" elements include `document.body`\r\n\t\t// and all `position: fixed` elements\r\n\t\t// which should be marked with this special CSS class.\r\n\t\t//\r\n\t\t// Make sure to add `.rrui__fixed-full-width` CSS class\r\n\t\t// to all full-width `position: fixed` elements.\r\n\t\t// Such elements must not be `width: 100%`\r\n\t\t// but rather `width: auto` or `left: 0; right: 0;`.\r\n\t\t//\r\n\t\t// Adjusts the width of all \"full-width\" elements back to their original value\r\n\t\t// now that the main (body) scrollbar is being restored.\r\n\t\t//\r\n\t\tfor (const element of get_full_width_elements())\r\n\t\t{\r\n\t\t\telement.style.marginRight = 0\r\n\t\t}\r\n\r\n\t\t// Restore the main (body) scrollbar.\r\n\t\tdocument.body.style.overflowX = bodyOverflowX\r\n\t\tdocument.body.style.overflowY = bodyOverflowY\r\n\t}\r\n\r\n\t// Restores original `document` scrollbar\r\n\t// and resets the modal content (e.g. a form)\r\n\ton_after_close = () =>\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tafterClose,\r\n\t\t\treset\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tif (reset)\r\n\t\t{\r\n\t\t\treset()\r\n\t\t}\r\n\r\n\t\tif (afterClose)\r\n\t\t{\r\n\t\t\tafterClose()\r\n\t\t}\r\n\r\n\t\tthis.adjust_scrollbar_after_close()\r\n\t}\r\n}\r\n\r\nclass ModalContent extends Component\r\n{\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tconst { reset } = this.props\r\n\r\n\t\tif (reset)\r\n\t\t{\r\n\t\t\treset()\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tcloseLabel,\r\n\t\t\tclose,\r\n\t\t\tfullscreen,\r\n\t\t\tchildren,\r\n\t\t\tclassName,\r\n\t\t\tstyle,\r\n\t\t\tform,\r\n\t\t\tcould_not_close_because_busy\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={ classNames('rrui__modal__content',\r\n\t\t\t\t{\r\n\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t'rrui__modal__content--fullscreen' : fullscreen,\r\n\r\n\t\t\t\t\t// Strictly speaking it's not `.rrui__modal` but this CSS class name will do\r\n\t\t\t\t\t'rrui__modal--could-not-close-because-busy': could_not_close_because_busy\r\n\t\t\t\t},\r\n\t\t\t\tclassName) }\r\n\t\t\t\tstyle={ style }>\r\n\r\n\t\t\t\t<div className=\"rrui__modal__content-body\">\r\n\r\n\t\t\t\t\t{ this.render_close_button() }\r\n\r\n\t\t\t\t\t{ children }\r\n\r\n\t\t\t\t\t{ closeLabel && !form &&\r\n\t\t\t\t\t\t<div className=\"rrui__form__actions\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tclassName={ classNames('rrui__modal__close', 'rrui__modal__close--bottom') }\r\n\t\t\t\t\t\t\t\taction={ close }>\r\n\t\t\t\t\t\t\t\t{ closeLabel }\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trender_close_button()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tcloseLabel,\r\n\t\t\tcloseButton,\r\n\t\t\tcloseButtonIcon,\r\n\t\t\tclose,\r\n\t\t\tbusy,\r\n\t\t\twait\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tif (!closeButton && !closeButtonIcon)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tonClick={ close }\r\n\t\t\t\taria-label={ closeLabel }\r\n\t\t\t\tclassName={ classNames('rrui__modal__close', 'rrui__modal__close--top',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__modal__close--busy' : busy || wait\r\n\t\t\t\t}) }>\r\n\t\t\t\t{ closeButton || React.createElement(closeButtonIcon) }\r\n\t\t\t</button>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst react_modal_style =\r\n{\r\n\toverlay:\r\n\t{\r\n\t\tposition : 'fixed',\r\n\t\tleft     : 0,\r\n\t\ttop      : 0,\r\n\t\tright    : 0,\r\n\t\tbottom   : 0,\r\n\t\t// Will show a scrollbar in case of modal content overflowing viewport height\r\n\t\toverflow : 'auto'\r\n\t}\r\n}\r\n\r\n// \"full-width\" elements include `document.body`\r\n// and all `position: fixed` elements\r\n// which should be marked with this special CSS class.\r\n//\r\n// Make sure to add `.rrui__fixed-full-width` CSS class\r\n// to all full-width `position: fixed` elements.\r\n// Such elements must not be `width: 100%`\r\n// but rather `width: auto` or `left: 0; right: 0;`.\r\n//\r\nfunction get_full_width_elements()\r\n{\r\n\t// `Array.from` requires ES6 polyfill.\r\n\t// const full_width_elements = Array.from(document.querySelectorAll('.rrui__fixed-full-width'))\r\n\tconst full_width_elements = [].slice.call(document.querySelectorAll('.rrui__fixed-full-width'))\r\n\tfull_width_elements.push(document.body)\r\n\treturn full_width_elements\r\n}"]}