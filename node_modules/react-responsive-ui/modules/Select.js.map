{"version":3,"sources":["../source/Select.js"],"names":["React","PureComponent","PropTypes","ReactDOM","classNames","scrollIntoViewIfNeeded","submitFormOnCtrlEnter","submitContainingForm","getScrollbarWidth","Empty_value_option_value","value_prop_type","oneOfType","string","number","bool","Select","props","options","value","autocomplete","children","menu","toggler","onChange","Error","state","matching_options","get_matching_options","undefined","Children","forEach","element","label","fallback","nativeExpanded","document","addEventListener","document_clicked","setState","javascript","resize_native_expanded_select","window","previous_props","previous_state","expanded","height","should_animate","calculate_height","removeEventListener","clearTimeout","toggle_timeout","scroll_into_view_timeout","restore_focus_on_collapse_timeout","id","upward","concise","compact","scroll","alignment","saveOnIcons","native","disabled","required","placeholder","error","closeButton","closeAriaLabel","style","className","list_height","get_options","list_style","is_scrollable","maxHeight","overflow","overflown","list_items","map","index","icon","render_list_item","wrapper_style","textAlign","selected","get_selected_option","show_options_list","length","show_label","select","ref","on_key_down_in_container","on_blur","render_selected_item","value_is_empty","should_indicate_invalid","render_toggler","list","toggle","render_static","scrollbarPadding","focused_option_value","is_focused","item_style","marginRight","button","extra_props","onClick","event","item_clicked","cloneElement","render_icon","get_option_key","type","Separator","label_is_shown","render_selected_item_only","native_expanded_select_container_style","tabIndex","onFocus","title","ariaLabel","inputClassName","toggleClassName","autocomplete_width","autocomplete_input_value","selected_label","get_selected_option_label","selected_text","selected_style_classes","on_autocomplete_input_change","on_key_down","show_selected_as_an_icon","onKeyDown","name","native_select_on_change","render_native_select_options","child","empty_option_is_selected","empty_option_present","rendered_options","option","unshift","indicateInvalid","get_option","filter","x","indexOf","option_index","maxItems","vertical_padding","focus","autocompleteShowAll","slice","i","option_element","findDOMNode","offset_top","offsetTop","is_first_option","firstChild","scrollTop","gravity","is_last_option","lastChild","top_line","bottom_line","offsetHeight","list_dom_node","scrollHeight","parseInt","getComputedStyle","paddingTop","scrollable_list_height","toLowerCase","verbose","propTypes","arrayOf","shape","node","func","isRequired","onBlur","object","oneOf","focusUponSelection","scrollIntoView","expandAnimationDuration","onTabOut","onToggle","defaultProps","previous_value","target","width","offsetWidth","toggle_options","preventDefault","setTimeout","is_now_expanded","dont_focus_after_toggle","is_still_expanded","is_internet_explorer","duration","scroll_to","callback","selected_option","options_list","contains","ctrlKey","altKey","shiftKey","metaKey","keyCode","previous","previous_focusable_option","show_option","next","next_focusable_option","relatedTarget","currentTarget","_event","stopPropagation","input","display","navigator","userAgent","component"],"mappings":"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","file":"Select.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ReactDOM from 'react-dom'\r\nimport classNames from 'classnames'\r\nimport scrollIntoViewIfNeeded from 'scroll-into-view-if-needed'\r\n\r\nimport { submitFormOnCtrlEnter, submitContainingForm, getScrollbarWidth } from './utility/dom'\r\n\r\n// Possible enhancements:\r\n//\r\n//  * If the menu is close to a screen edge,\r\n//    automatically reposition it so that it fits on the screen\r\n//  * Maybe show menu immediately above the toggler\r\n//    (like in Material design), not below it.\r\n//\r\n// https://material.google.com/components/menus.html\r\n\r\nconst Empty_value_option_value = ''\r\n\r\nconst value_prop_type = PropTypes.oneOfType\r\n([\r\n\tPropTypes.string,\r\n\tPropTypes.number,\r\n\tPropTypes.bool\r\n])\r\n\r\nexport default class Select extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// A list of selectable options\r\n\t\toptions    : PropTypes.arrayOf\r\n\t\t(\r\n\t\t\tPropTypes.shape\r\n\t\t\t({\r\n\t\t\t\t// Option value (may be `undefined`)\r\n\t\t\t\tvalue : value_prop_type,\r\n\t\t\t\t// Option label (may be `undefined`)\r\n\t\t\t\tlabel : PropTypes.string,\r\n\t\t\t\t// Option icon\r\n\t\t\t\ticon  : PropTypes.oneOfType\r\n\t\t\t\t([\r\n\t\t\t\t\tPropTypes.node,\r\n\t\t\t\t\tPropTypes.func\r\n\t\t\t\t])\r\n\t\t\t})\r\n\t\t),\r\n\r\n\t\t// HTML form input `name` attribute\r\n\t\tname       : PropTypes.string,\r\n\r\n\t\t// Label which is placed above the select\r\n\t\tlabel      : PropTypes.string,\r\n\r\n\t\t// Placeholder (like \"Choose\")\r\n\t\tplaceholder : PropTypes.string,\r\n\r\n\t\t// Whether to use native `<select/>`\r\n\t\tnative      : PropTypes.bool.isRequired,\r\n\r\n\t\t// Whether to use native `<select/>` when expanded\r\n\t\tnativeExpanded : PropTypes.bool.isRequired,\r\n\r\n\t\t// Show icon only for selected item,\r\n\t\t// and only if `concise` is `true`.\r\n\t\tsaveOnIcons : PropTypes.bool,\r\n\r\n\t\t// Disables this control\r\n\t\tdisabled   : PropTypes.bool,\r\n\r\n\t\t// Set to `true` to mark the field as required\r\n\t\trequired   : PropTypes.bool.isRequired,\r\n\r\n\t\t// Selected option value\r\n\t\tvalue      : value_prop_type,\r\n\r\n\t\t// Is called when an option is selected\r\n\t\tonChange   : PropTypes.func,\r\n\r\n\t\t// Is called when the select is focused\r\n\t\tonFocus    : PropTypes.func,\r\n\r\n\t\t// Is called when the select is blurred.\r\n\t\t// This `onBlur` interceptor is a workaround for `redux-form`,\r\n\t\t// so that it gets the parsed `value` in its `onBlur` handler,\r\n\t\t// not the formatted text.\r\n\t\tonBlur     : PropTypes.func,\r\n\r\n\t\t// (exotic use case)\r\n\t\t// Falls back to a plain HTML input\r\n\t\t// when javascript is disabled (e.g. Tor)\r\n\t\tfallback   : PropTypes.bool.isRequired,\r\n\r\n\t\t// Component CSS class\r\n\t\tclassName  : PropTypes.string,\r\n\r\n\t\t// Autocomplete `<input/>` CSS class\r\n\t\tinputClassName : PropTypes.string,\r\n\r\n\t\t// `<button/>` toggler CSS class\r\n\t\ttoggleClassName : PropTypes.string,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle      : PropTypes.object,\r\n\r\n\t\t// If this flag is set to `true`,\r\n\t\t// and `icon` is specified for a selected option,\r\n\t\t// then the selected option will be displayed\r\n\t\t// as icon only, without the label.\r\n\t\tconcise    : PropTypes.bool,\r\n\r\n\t\t// If this flag is set to `true`,\r\n\t\t// then it makes `<Select/>` not stretch itself\r\n\t\t// to 100% width by making it `inline-block`.\r\n\t\t// Is set to `true` when `concise` is `true`\r\n\t\t// because it makes sense.\r\n\t\tcompact    : PropTypes.bool,\r\n\r\n\t\t// HTML `tabindex` attribute\r\n\t\ttabIndex   : PropTypes.number,\r\n\r\n\t\t// If set to `true`, autocompletion is available\r\n\t\t// upon expanding the options list.\r\n\t\tautocomplete : PropTypes.bool,\r\n\r\n\t\t// If set to `true`, autocomple will show all\r\n\t\t// matching options instead of just `maxItems`.\r\n\t\tautocompleteShowAll : PropTypes.bool,\r\n\r\n\t\t// Options list alignment (\"left\", \"right\")\r\n\t\talignment  : PropTypes.oneOf(['left', 'right']),\r\n\r\n\t\t// If `menu` flag is set to `true`\r\n\t\t// then it's gonna be a dropdown menu\r\n\t\t// with `children` elements inside\r\n\t\t// and therefore `onChange` won't be called\r\n\t\t// on menu item click.\r\n\t\tmenu       : PropTypes.bool,\r\n\r\n\t\t// If `menu` flag is set to `true`\r\n\t\t// then `toggler` is the dropdown menu button.\r\n\t\t// E.g. `toggler={<DropDownMenuButton/>}`.\r\n\t\t// `toggler` must accept `onClick` and `onKeyDown` properties.\r\n\t\ttoggler    : PropTypes.element,\r\n\r\n\t\t// If `scroll` is `false`, then options list\r\n\t\t// is not limited in height.\r\n\t\t// Is `true` by default (scrollable).\r\n\t\tscroll     : PropTypes.bool.isRequired,\r\n\r\n\t\t// If this flag is set to `true`,\r\n\t\t// then the dropdown expands itself upward.\r\n\t\t// (as opposed to the default downward)\r\n\t\tupward     : PropTypes.bool,\r\n\r\n\t\t// Maximum items fitting the options list height (scrollable).\r\n\t\t// In case of `autocomplete` that's the maximum number of matched items shown.\r\n\t\t// Is `6` by default.\r\n\t\tmaxItems   : PropTypes.number.isRequired,\r\n\r\n\t\t// Is `true` by default (only when the list of options is scrollable)\r\n\t\tscrollbarPadding : PropTypes.bool,\r\n\r\n\t\tfocusUponSelection : PropTypes.bool.isRequired,\r\n\r\n\t\t// When the `<Select/>` is expanded\r\n\t\t// the options list may not fit on the screen.\r\n\t\t// If `scrollIntoView` is `true` (which is the default)\r\n\t\t// then the browser will automatically scroll\r\n\t\t// so that the expanded options list fits on the screen.\r\n\t\tscrollIntoView : PropTypes.bool.isRequired,\r\n\r\n\t\t// If `scrollIntoView` is `true` (which is the default)\r\n\t\t// then this is gonna be the delay after which it scrolls into view.\r\n\t\texpandAnimationDuration : PropTypes.number.isRequired,\r\n\r\n\t\tonTabOut : PropTypes.func,\r\n\r\n\t\tonToggle : PropTypes.func,\r\n\r\n\t\t// `aria-label` for the `<Select/>`'s `<button/>`\r\n\t\tariaLabel : PropTypes.string.isRequired,\r\n\r\n\t\t// `aria-label` for the \"Close\" button\r\n\t\t// (which is an \"x\" visible in fullscreen mode).\r\n\t\tcloseAriaLabel : PropTypes.string.isRequired,\r\n\r\n\t\t// The \"x\" button that closes the `<Select/>`\r\n\t\t// in fullscreen mode on mobile devices.\r\n\t\tcloseButton : PropTypes.oneOfType([PropTypes.node, PropTypes.oneOf([false])]).isRequired\r\n\r\n\t\t// transition_item_count_min : PropTypes.number,\r\n\t\t// transition_duration_min : PropTypes.number,\r\n\t\t// transition_duration_max : PropTypes.number\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\talignment          : 'left',\r\n\t\tscroll             : true,\r\n\t\tmaxItems           : 6,\r\n\t\tscrollbarPadding   : true,\r\n\t\tfocusUponSelection : true,\r\n\t\tfallback           : false,\r\n\t\tnative             : false,\r\n\t\tnativeExpanded     : false,\r\n\t\tscrollIntoView     : true,\r\n\t\texpandAnimationDuration : 150,\r\n\r\n\t\t// Set to `true` to mark the field as required\r\n\t\trequired : false,\r\n\r\n\t\t// `aria-label` for the `<Select/>`'s `<button/>`\r\n\t\tariaLabel : 'Select country',\r\n\r\n\t\t// `aria-label` for the \"Close\" button\r\n\t\t// (which is an \"x\" visible in fullscreen mode).\r\n\t\tcloseAriaLabel : 'Close',\r\n\r\n\t\t// The \"x\" button that closes the `<Select/>`\r\n\t\t// in fullscreen mode on mobile devices.\r\n\t\tcloseButton : (\r\n\t\t\t<svg viewBox=\"0 0 22 21\" className=\"rrui__select__close-icon\">\r\n\t\t\t\t<g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" strokeLinecap=\"round\">\r\n\t\t\t\t\t<g className=\"rrui__select__close-icon-path\" transform=\"translate(-1367.000000, -40.000000)\" strokeWidth=\"1\">\r\n\t\t\t\t\t\t<g transform=\"translate(1368.000000, 41.000000)\">\r\n\t\t\t\t\t\t\t<path d=\"M0.807611845,0.307611845 L19.1923882,18.6923882\"></path>\r\n\t\t\t\t\t\t\t<path d=\"M0.807611845,0.307611845 L19.1923882,18.6923882\" transform=\"translate(10.000000, 9.500000) scale(-1, 1) translate(-10.000000, -9.500000) \"></path>\r\n\t\t\t\t\t\t</g>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t</g>\r\n\t\t\t</svg>\r\n\t\t)\r\n\r\n\t\t// transition_item_count_min : 1,\r\n\t\t// transition_duration_min : 60, // milliseconds\r\n\t\t// transition_duration_max : 100 // milliseconds\r\n\t}\r\n\r\n\tstate =\r\n\t{\r\n\t\t// Is initialized during the first `componentDidUpdate()` call\r\n\t\tvertical_padding: 0\r\n\t}\r\n\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props)\r\n\r\n\t\t// Shouldn't memory leak because\r\n\t\t// the set of options is assumed to be constant.\r\n\t\tthis.options = {}\r\n\r\n\t\tconst\r\n\t\t{\r\n\t\t\tvalue,\r\n\t\t\tautocomplete,\r\n\t\t\toptions,\r\n\t\t\tchildren,\r\n\t\t\tmenu,\r\n\t\t\ttoggler,\r\n\t\t\tonChange\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tif (autocomplete)\r\n\t\t{\r\n\t\t\tif (!options)\r\n\t\t\t{\r\n\t\t\t\tthrow new Error(`\"options\" property is required for an \"autocomplete\" select`)\r\n\t\t\t}\r\n\r\n\t\t\tthis.state.matching_options = this.get_matching_options(options, undefined)\r\n\t\t}\r\n\r\n\t\tif (children && !menu)\r\n\t\t{\r\n\t\t\tReact.Children.forEach(children, (element) =>\r\n\t\t\t{\r\n\t\t\t\tif (!element.props.value)\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new Error(`You must specify \"value\" prop on each child of <Select/>`)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!element.props.label)\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new Error(`You must specify \"label\" prop on each child of <Select/>`)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (menu && !toggler)\r\n\t\t{\r\n\t\t\tthrow new Error(`Supply a \"toggler\" component when enabling \"menu\" in <Select/>`)\r\n\t\t}\r\n\r\n\t\tif (!menu && !onChange)\r\n\t\t{\r\n\t\t\tthrow new Error(`\"onChange\" property must be specified for a non-menu <Select/>`)\r\n\t\t}\r\n\t}\r\n\r\n\t// Client side rendering, javascript is enabled\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tconst { fallback, nativeExpanded } = this.props\r\n\r\n\t\tdocument.addEventListener('click', this.document_clicked)\r\n\r\n\t\tif (fallback)\r\n\t\t{\r\n\t\t\tthis.setState({ javascript: true })\r\n\t\t}\r\n\r\n\t\tif (nativeExpanded)\r\n\t\t{\r\n\t\t\tthis.resize_native_expanded_select()\r\n\t\t\twindow.addEventListener('resize', this.resize_native_expanded_select)\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(previous_props, previous_state)\r\n\t{\r\n\t\tconst { nativeExpanded, value } = this.props\r\n\t\tconst { expanded, height } = this.state\r\n\r\n\t\tif (expanded !== previous_state.expanded)\r\n\t\t{\r\n\t\t\tif (expanded && this.should_animate())\r\n\t\t\t{\r\n\t\t\t\tif (height === undefined)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.calculate_height()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If the `value` changed then resize the native expanded `<select/>`\r\n\t\tif (nativeExpanded && value !== previous_props.value)\r\n\t\t{\r\n\t\t\tthis.resize_native_expanded_select()\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tconst { nativeExpanded } = this.props\r\n\r\n\t\tdocument.removeEventListener('click', this.document_clicked)\r\n\r\n\t\tif (nativeExpanded)\r\n\t\t{\r\n\t\t\twindow.removeEventListener('resize', this.resize_native_expanded_select)\r\n\t\t}\r\n\r\n\t\tclearTimeout(this.toggle_timeout)\r\n\t\tclearTimeout(this.scroll_into_view_timeout)\r\n\t\tclearTimeout(this.restore_focus_on_collapse_timeout)\r\n\r\n\t\tthis.toggle_timeout = undefined\r\n\t\tthis.scroll_into_view_timeout = undefined\r\n\t\tthis.restore_focus_on_collapse_timeout = undefined\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tupward,\r\n\t\t\tconcise,\r\n\t\t\tcompact,\r\n\t\t\tscroll,\r\n\t\t\tchildren,\r\n\t\t\tmenu,\r\n\t\t\ttoggler,\r\n\t\t\talignment,\r\n\t\t\tautocomplete,\r\n\t\t\tsaveOnIcons,\r\n\t\t\tfallback,\r\n\t\t\tnative,\r\n\t\t\tnativeExpanded,\r\n\t\t\tdisabled,\r\n\t\t\trequired,\r\n\t\t\tplaceholder,\r\n\t\t\tlabel,\r\n\t\t\tvalue,\r\n\t\t\terror,\r\n\t\t\tcloseButton,\r\n\t\t\tcloseAriaLabel,\r\n\t\t\tstyle,\r\n\t\t\tclassName\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst\r\n\t\t{\r\n\t\t\texpanded,\r\n\t\t\tlist_height\r\n\t\t}\r\n\t\t= this.state\r\n\r\n\t\tconst options = this.get_options()\r\n\r\n\t\tlet list_style\r\n\r\n\t\t// Makes the options list scrollable (only when not in `autocomplete` mode).\r\n\t\tif (this.is_scrollable() && list_height !== undefined)\r\n\t\t{\r\n\t\t\tlist_style = { maxHeight: `${list_height}px` }\r\n\t\t}\r\n\r\n\t\tconst overflow = scroll && options && this.overflown()\r\n\r\n\t\tlet list_items\r\n\r\n\t\t// If a list of options is supplied as an array of `{ value, label }`,\r\n\t\t// then transform those elements to <buttons/>\r\n\t\tif (options)\r\n\t\t{\r\n\t\t\tlist_items = options.map(({ value, label, icon }, index) =>\r\n\t\t\t{\r\n\t\t\t\treturn this.render_list_item({ index, value, label, icon: !saveOnIcons && icon, overflow })\r\n\t\t\t})\r\n\t\t}\r\n\t\t// Else, if a list of options is supplied as a set of child React elements,\r\n\t\t// then render those elements.\r\n\t\telse\r\n\t\t{\r\n\t\t\tlist_items = React.Children.map(children, (element, index) =>\r\n\t\t\t{\r\n\t\t\t\tif (!element)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.render_list_item({ index, element })\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst wrapper_style = { textAlign: alignment }\r\n\r\n\t\tconst selected = this.get_selected_option()\r\n\r\n\t\tconst show_options_list = !native && !nativeExpanded && list_items.length > 0\r\n\t\tconst show_label = label && (this.get_selected_option() || placeholder)\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={ ref => this.select = ref }\r\n\t\t\t\tonKeyDown={ this.on_key_down_in_container }\r\n\t\t\t\tonBlur={ this.on_blur }\r\n\t\t\t\tstyle={ style ? { ...wrapper_style, ...style } : wrapper_style }\r\n\t\t\t\tclassName={ classNames\r\n\t\t\t\t(\r\n\t\t\t\t\t'rrui__select',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'rrui__rich'              : fallback,\r\n\t\t\t\t\t\t'rrui__select--menu'      : menu,\r\n\t\t\t\t\t\t'rrui__select--upward'    : upward,\r\n\t\t\t\t\t\t'rrui__select--expanded'  : expanded,\r\n\t\t\t\t\t\t'rrui__select--collapsed' : !expanded,\r\n\t\t\t\t\t\t'rrui__select--disabled'  : disabled,\r\n\t\t\t\t\t\t'rrui__select--compact'   : compact || (concise && !autocomplete)\r\n\t\t\t\t\t},\r\n\t\t\t\t\tclassName\r\n\t\t\t\t) }>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={ classNames\r\n\t\t\t\t\t({\r\n\t\t\t\t\t\t'rrui__input': !toggler\r\n\t\t\t\t\t}) }>\r\n\r\n\t\t\t\t\t{/* Currently selected item */}\r\n\t\t\t\t\t{ !menu && !native && this.render_selected_item(show_label) }\r\n\r\n\t\t\t\t\t{/* Label */}\r\n\t\t\t\t\t{/* (this label is placed after the \"selected\" button\r\n\t\t\t\t\t     to utilize the CSS `+` selector) */}\r\n\t\t\t\t\t{/* If the `placeholder` wasn't specified\r\n\t\t\t\t\t    but `label` was and no option is currently selected\r\n\t\t\t\t\t    then the `label` becomes the `placeholder`\r\n\t\t\t\t\t    until something is selected */}\r\n\t\t\t\t\t{ show_label &&\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\thtmlFor={ id }\r\n\t\t\t\t\t\t\tclassName={ classNames('rrui__input-label',\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'rrui__input-label--required' : required && value_is_empty(value),\r\n\t\t\t\t\t\t\t\t'rrui__input-label--invalid'  : this.should_indicate_invalid()\r\n\t\t\t\t\t\t\t}) }>\r\n\t\t\t\t\t\t\t{ label }\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{/* Menu toggler */}\r\n\t\t\t\t\t{ menu && this.render_toggler() }\r\n\r\n\t\t\t\t\t{/* The list of selectable options */}\r\n\t\t\t\t\t{ show_options_list &&\r\n\t\t\t\t\t\t<ul\r\n\t\t\t\t\t\t\tref={ ref => this.list = ref }\r\n\t\t\t\t\t\t\tstyle={ list_style }\r\n\t\t\t\t\t\t\tclassName={ classNames\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t'rrui__expandable',\r\n\t\t\t\t\t\t\t\t'rrui__expandable--overlay',\r\n\t\t\t\t\t\t\t\t'rrui__select__options',\r\n\t\t\t\t\t\t\t\t'rrui__shadow',\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t'rrui__select__options--autocomplete'  : autocomplete,\r\n\t\t\t\t\t\t\t\t\t'rrui__select__options--menu'          : menu,\r\n\t\t\t\t\t\t\t\t\t'rrui__expandable--expanded'           : expanded,\r\n\t\t\t\t\t\t\t\t\t'rrui__select__options--expanded'      : expanded,\r\n\t\t\t\t\t\t\t\t\t'rrui__expandable--left-aligned'       : alignment === 'left',\r\n\t\t\t\t\t\t\t\t\t'rrui__expandable--right-aligned'      : alignment === 'right',\r\n\t\t\t\t\t\t\t\t\t'rrui__select__options--left-aligned'  : !children && alignment === 'left',\r\n\t\t\t\t\t\t\t\t\t'rrui__select__options--right-aligned' : !children && alignment === 'right',\r\n\t\t\t\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t\t\t\t'rrui__select__options--upward'        : upward,\r\n\t\t\t\t\t\t\t\t\t'rrui__select__options--downward'      : !upward\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t) }>\r\n\t\t\t\t\t\t\t{ list_items }\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{/* The \"x\" button to hide the list of options\r\n\t\t\t\t\t    for fullscreen `<Select/>` on mobile devices */}\r\n\t\t\t\t\t{ show_options_list && expanded && closeButton &&\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\tonClick={ this.toggle }\r\n\t\t\t\t\t\t\taria-label={ closeAriaLabel }\r\n\t\t\t\t\t\t\tclassName={ classNames('rrui__button-reset', 'rrui__select__close',\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'rrui__select__close--autocomplete' : autocomplete\r\n\t\t\t\t\t\t\t}) }>\r\n\t\t\t\t\t\t\t{ closeButton }\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{/* Fallback in case javascript is disabled */}\r\n\t\t\t\t\t{ (native || (fallback && !this.state.javascript)) && this.render_static() }\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Error message */}\r\n\t\t\t\t{ this.should_indicate_invalid() &&\r\n\t\t\t\t\t<div className=\"rrui__input-error\">{ error }</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trender_list_item({ index, element, value, label, icon, overflow }) // , first, last\r\n\t{\r\n\t\tconst { disabled, menu, scrollbarPadding } = this.props\r\n\t\tconst { focused_option_value, expanded } = this.state\r\n\r\n\t\t// If a list of options is supplied as a set of child React elements,\r\n\t\t// then extract values from their props.\r\n\t\tif (element)\r\n\t\t{\r\n\t\t\tvalue = element.props.value\r\n\t\t}\r\n\r\n\t\tconst is_focused = !menu && value === focused_option_value\r\n\r\n\t\tlet item_style\r\n\r\n\t\t// on overflow the vertical scrollbar will take up space\r\n\t\t// reducing padding-right and the only way to fix that\r\n\t\t// is to add additional padding-right\r\n\t\t//\r\n\t\t// a hack to restore padding-right taken up by a vertical scrollbar\r\n\t\tif (overflow && scrollbarPadding)\r\n\t\t{\r\n\t\t\titem_style = { marginRight: getScrollbarWidth() + 'px' }\r\n\t\t}\r\n\r\n\t\tlet button\r\n\r\n\t\t// If a list of options is supplied as a set of child React elements,\r\n\t\t// then enhance those elements with extra props.\r\n\t\tif (element)\r\n\t\t{\r\n\t\t\tconst extra_props =\r\n\t\t\t{\r\n\t\t\t\tstyle     : item_style ? { ...item_style, ...element.props.style } : element.props.style,\r\n\t\t\t\tclassName : classNames\r\n\t\t\t\t(\r\n\t\t\t\t\t'rrui__button-reset',\r\n\t\t\t\t\t'rrui__select__option',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'rrui__select__option--focused' : is_focused\r\n\t\t\t\t\t},\r\n\t\t\t\t\telement.props.className\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\tconst onClick = element.props.onClick\r\n\r\n\t\t\textra_props.onClick = (event) =>\r\n\t\t\t{\r\n\t\t\t\tif (menu)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.toggle()\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.item_clicked(value, event)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (onClick)\r\n\t\t\t\t{\r\n\t\t\t\t\tonClick(event)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tbutton = React.cloneElement(element, extra_props)\r\n\t\t}\r\n\t\t// Else, if a list of options is supplied as an array of `{ value, label }`,\r\n\t\t// then transform those options to <buttons/>\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (icon) {\r\n\t\t\t\ticon = render_icon(icon)\r\n\t\t\t}\r\n\r\n\t\t\tbutton = (\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tonClick={ event => this.item_clicked(value, event) }\r\n\t\t\t\t\tdisabled={ disabled }\r\n\t\t\t\t\ttabIndex=\"-1\"\r\n\t\t\t\t\taria-label={ label }\r\n\t\t\t\t\tclassName={ classNames\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t'rrui__button-reset',\r\n\t\t\t\t\t\t'rrui__select__option',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'rrui__select__option--focused' : is_focused,\r\n\t\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t\t'rrui__select__option--disabled' : disabled\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t) }\r\n\t\t\t\t\tstyle={ item_style }>\r\n\t\t\t\t\t{ icon &&\r\n\t\t\t\t\t\tReact.cloneElement(icon,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tclassName: classNames(icon.props.className, 'rrui__select__option-icon')\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{ label }\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<li\r\n\t\t\t\tkey={ get_option_key(value) }\r\n\t\t\t\tref={ ref => this.options[get_option_key(value)] = ref }\r\n\t\t\t\tclassName={ classNames\r\n\t\t\t\t(\r\n\t\t\t\t\t'rrui__expandable__content',\r\n\t\t\t\t\t'rrui__select__options-list-item',\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'rrui__select__separator-option' : element && element.type === Select.Separator,\r\n\t\t\t\t\t\t'rrui__expandable__content--expanded' : expanded,\r\n\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t'rrui__select__options-list-item--expanded' : expanded\r\n\t\t\t\t\t}\r\n\t\t\t\t) }>\r\n\t\t\t\t{ button }\r\n\t\t\t</li>\r\n\t\t)\r\n\t}\r\n\r\n\t// Renders the selected option\r\n\t// and possibly a transparent native `<select/>` above it\r\n\t// so that the native `<select/>` expands upon click\r\n\t// on the selected option\r\n\t// (in case of `nativeExpanded` setting).\r\n\trender_selected_item(label_is_shown)\r\n\t{\r\n\t\tconst { nativeExpanded, toggler } = this.props\r\n\r\n\t\tif (toggler)\r\n\t\t{\r\n\t\t\treturn this.render_toggler()\r\n\t\t}\r\n\r\n\t\tconst selected = this.render_selected_item_only(label_is_shown)\r\n\r\n\t\tif (nativeExpanded)\r\n\t\t{\r\n\t\t\treturn (\r\n\t\t\t\t<div style={ native_expanded_select_container_style }>\r\n\t\t\t\t\t{ this.render_static() }\r\n\t\t\t\t\t{ selected }\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn selected\r\n\t}\r\n\r\n\trender_selected_item_only(label_is_shown)\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tchildren,\r\n\t\t\tvalue,\r\n\t\t\tplaceholder,\r\n\t\t\tlabel,\r\n\t\t\tdisabled,\r\n\t\t\trequired,\r\n\t\t\tautocomplete,\r\n\t\t\tconcise,\r\n\t\t\tnativeExpanded,\r\n\t\t\ttabIndex,\r\n\t\t\tonFocus,\r\n\t\t\ttitle,\r\n\t\t\tariaLabel,\r\n\t\t\tinputClassName,\r\n\t\t\ttoggleClassName\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst\r\n\t\t{\r\n\t\t\texpanded,\r\n\t\t\tautocomplete_width,\r\n\t\t\tautocomplete_input_value\r\n\t\t}\r\n\t\t= this.state\r\n\r\n\t\tconst selected = this.get_selected_option()\r\n\t\tconst selected_label = this.get_selected_option_label()\r\n\r\n\t\tconst selected_text = selected ? selected_label : (placeholder || label)\r\n\r\n\t\tconst selected_style_classes =\r\n\t\t{\r\n\t\t\t'rrui__input-element' : true\r\n\t\t}\r\n\r\n\t\tif (autocomplete && expanded)\r\n\t\t{\r\n\t\t\t// style = { ...style, width: autocomplete_width + 'px' }\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tref={ ref => this.autocomplete = ref }\r\n\t\t\t\t\tplaceholder={ selected_text }\r\n\t\t\t\t\tvalue={ autocomplete_input_value }\r\n\t\t\t\t\tonChange={ this.on_autocomplete_input_change }\r\n\t\t\t\t\tonKeyDown={ this.on_key_down }\r\n\t\t\t\t\tonFocus={ onFocus }\r\n\t\t\t\t\ttabIndex={ tabIndex }\r\n\t\t\t\t\ttitle={ title }\r\n\t\t\t\t\tclassName={ classNames\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tselected_style_classes,\r\n\t\t\t\t\t\t'rrui__input-field',\r\n\t\t\t\t\t\t'rrui__select__autocomplete',\r\n\t\t\t\t\t\tinputClassName,\r\n\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t// (should it even be optimized).\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'rrui__input-field--disabled' : disabled\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t) }/>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tconst show_selected_as_an_icon = concise && selected && selected.icon\r\n\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tref={ ref => this.selected = ref }\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tdisabled={ disabled }\r\n\t\t\t\tonClick={ this.toggle }\r\n\t\t\t\tonKeyDown={ this.on_key_down }\r\n\t\t\t\tonFocus={ onFocus }\r\n\t\t\t\ttabIndex={ nativeExpanded ? -1 : tabIndex }\r\n\t\t\t\ttitle={ title }\r\n\t\t\t\taria-label={ ariaLabel }\r\n\t\t\t\tclassName={ classNames\r\n\t\t\t\t(\r\n\t\t\t\t\tselected_style_classes,\r\n\t\t\t\t\t'rrui__button-reset',\r\n\t\t\t\t\t'rrui__select__button',\r\n\t\t\t\t\ttoggleClassName,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'rrui__select__button--empty'   : !selected_label,\r\n\t\t\t\t\t\t'rrui__select__button--invalid' : this.should_indicate_invalid(),\r\n\t\t\t\t\t\t'rrui__input-element--invalid'  : this.should_indicate_invalid(),\r\n\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t// (should it even be optimized).\r\n\t\t\t\t\t\t'rrui__select__button--disabled' : disabled\r\n\t\t\t\t\t}\r\n\t\t\t\t) }>\r\n\r\n\t\t\t\t{/* http://stackoverflow.com/questions/35464067/flexbox-not-working-on-button-element-in-some-browsers */}\r\n\t\t\t\t<div className=\"rrui__select__selected-content\">\r\n\r\n\t\t\t\t\t{/* Selected option label (or icon) */}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={ classNames('rrui__select__selected-label',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'rrui__select__selected-label--required' : !label_is_shown && required && value_is_empty(value)\r\n\t\t\t\t\t\t}) }>\r\n\t\t\t\t\t\t{ show_selected_as_an_icon ? React.cloneElement(render_icon(selected.icon), { title: selected_label }) : selected_text }\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* An arrow */}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={ classNames('rrui__select__arrow',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t\t\t'rrui__select__arrow--expanded' : expanded,\r\n\t\t\t\t\t\t\t'rrui__select__arrow--disabled' : disabled\r\n\t\t\t\t\t\t}) }/>\r\n\t\t\t\t</div>\r\n\t\t\t</button>\r\n\t\t)\r\n\t}\r\n\r\n\trender_toggler()\r\n\t{\r\n\t\tconst { toggler } = this.props\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"rrui__select__toggler\">\r\n\t\t\t\t{ React.cloneElement(toggler,\r\n\t\t\t\t{\r\n\t\t\t\t\tref       : ref => this.selected = ref,\r\n\t\t\t\t\tonClick   : this.toggle,\r\n\t\t\t\t\tonKeyDown : this.on_key_down\r\n\t\t\t\t}) }\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\t// supports disabled javascript\r\n\trender_static()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\tvalue,\r\n\t\t\tlabel,\r\n\t\t\tdisabled,\r\n\t\t\toptions,\r\n\t\t\tmenu,\r\n\t\t\ttoggler,\r\n\t\t\tfallback,\r\n\t\t\tnative,\r\n\t\t\tnativeExpanded,\r\n\t\t\ttabIndex,\r\n\t\t\tchildren\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tif (menu)\r\n\t\t{\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={ classNames\r\n\t\t\t\t\t({\r\n\t\t\t\t\t\t'rrui__rich__fallback' : fallback\r\n\t\t\t\t\t}) }>\r\n\t\t\t\t\t{toggler}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<select\r\n\t\t\t\tref={ ref => this.native = ref }\r\n\t\t\t\tid={ id }\r\n\t\t\t\tname={ name }\r\n\t\t\t\tvalue={ value_is_empty(value) ? Empty_value_option_value : value }\r\n\t\t\t\tdisabled={ disabled }\r\n\t\t\t\tonChange={ this.native_select_on_change }\r\n\t\t\t\ttabIndex={ (native || nativeExpanded) ? tabIndex : undefined }\r\n\t\t\t\tclassName={ classNames('rrui__input', 'rrui__select__native',\r\n\t\t\t\t{\r\n\t\t\t\t\t'rrui__select__native-expanded' : nativeExpanded,\r\n\t\t\t\t\t'rrui__rich__fallback'          : fallback\r\n\t\t\t\t}) }>\r\n\t\t\t\t{\r\n\t\t\t\t\toptions\r\n\t\t\t\t\t?\r\n\t\t\t\t\tthis.render_native_select_options(options, value_is_empty(value))\r\n\t\t\t\t\t:\r\n\t\t\t\t\tReact.Children.map(children, (child) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (!child)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\tclassName=\"rrui__select__native-option\"\r\n\t\t\t\t\t\t\t\tkey={ child.props.value }\r\n\t\t\t\t\t\t\t\tvalue={ child.props.value }>\r\n\t\t\t\t\t\t\t\t{ child.props.label }\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</select>\r\n\t\t)\r\n\t}\r\n\r\n\trender_native_select_options(options, empty_option_is_selected)\r\n\t{\r\n\t\tconst { placeholder } = this.props\r\n\r\n\t\tlet empty_option_present = false\r\n\r\n\t\tconst rendered_options = options.map((option) =>\r\n\t\t{\r\n\t\t\tlet { value, label } = option\r\n\r\n\t\t\tif (value_is_empty(value))\r\n\t\t\t{\r\n\t\t\t\tempty_option_present = true\r\n\t\t\t\tvalue = Empty_value_option_value\r\n\t\t\t}\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<option\r\n\t\t\t\t\tclassName=\"rrui__select__native-option\"\r\n\t\t\t\t\tkey={ get_option_key(value) }\r\n\t\t\t\t\tvalue={ value }>\r\n\t\t\t\t\t{ label }\r\n\t\t\t\t</option>\r\n\t\t\t)\r\n\t\t})\r\n\r\n\t\tif (empty_option_is_selected && !empty_option_present)\r\n\t\t{\r\n\t\t\trendered_options.unshift\r\n\t\t\t(\r\n\t\t\t\t<option\r\n\t\t\t\t\tclassName=\"rrui__select__native-option\"\r\n\t\t\t\t\tkey={ get_option_key(undefined) }\r\n\t\t\t\t\tvalue=\"\">\r\n\t\t\t\t\t{ placeholder }\r\n\t\t\t\t</option>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn rendered_options\r\n\t}\r\n\r\n\t// Whether should indicate that the input value is invalid\r\n\tshould_indicate_invalid()\r\n\t{\r\n\t\tconst { indicateInvalid, error } = this.props\r\n\r\n\t\treturn indicateInvalid && error\r\n\t}\r\n\r\n\tnative_select_on_change = (event) =>\r\n\t{\r\n\t\tconst { onChange, value: previous_value } = this.props\r\n\r\n\t\tlet value = event.target.value\r\n\r\n\t\t// Convert back from an empty string to `undefined`\r\n\t\tif (value === Empty_value_option_value)\r\n\t\t{\r\n\t\t\t// `null` is not accounted for, use `undefined` instead.\r\n\t\t\tvalue = undefined\r\n\t\t}\r\n\r\n\t\t// Call `onChange` only if `value` did actually change\r\n\t\tif (value !== previous_value)\r\n\t\t{\r\n\t\t\tonChange(value)\r\n\t\t}\r\n\t}\r\n\r\n\tresize_native_expanded_select = () =>\r\n\t{\r\n\t\t// For some strange reason 1px on the right side of the `<select/>`\r\n\t\t// still falls through to the underlying selected option label.\r\n\t\tReactDOM.findDOMNode(this.native).style.width = (ReactDOM.findDOMNode(this.selected).offsetWidth + 1) + 'px'\r\n\t}\r\n\r\n\tget_selected_option()\r\n\t{\r\n\t\tconst { value } = this.props\r\n\r\n\t\treturn this.get_option(value)\r\n\t}\r\n\r\n\tget_option(value)\r\n\t{\r\n\t\tconst { options, children } = this.props\r\n\r\n\t\tif (options)\r\n\t\t{\r\n\t\t\treturn options.filter(x => x.value === value)[0]\r\n\t\t}\r\n\r\n\t\tlet option\r\n\r\n\t\tReact.Children.forEach(children, function(child)\r\n\t\t{\r\n\t\t\tif (child.props.value === value)\r\n\t\t\t{\r\n\t\t\t\toption = child\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn option\r\n\t}\r\n\r\n\tget_option_index(option)\r\n\t{\r\n\t\tconst { options, children } = this.props\r\n\r\n\t\tif (options)\r\n\t\t{\r\n\t\t\treturn options.indexOf(option)\r\n\t\t}\r\n\r\n\t\tlet option_index\r\n\r\n\t\tReact.Children.forEach(children, function(child, index)\r\n\t\t{\r\n\t\t\tif (child.props.value === option.value)\r\n\t\t\t{\r\n\t\t\t\toption_index = index\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn option_index\r\n\t}\r\n\r\n\tget_selected_option_label()\r\n\t{\r\n\t\tconst { options } = this.props\r\n\r\n\t\tconst selected = this.get_selected_option()\r\n\r\n\t\tif (!selected)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (options)\r\n\t\t{\r\n\t\t\treturn selected.label\r\n\t\t}\r\n\r\n\t\treturn selected.props.label\r\n\t}\r\n\r\n\toverflown()\r\n\t{\r\n\t\tconst { options, maxItems } = this.props\r\n\r\n\t\treturn options.length > maxItems\r\n\t}\r\n\r\n\tscrollable_list_height(height, vertical_padding)\r\n\t{\r\n\t\tconst { maxItems } = this.props\r\n\r\n\t\t// (Adding vertical padding so that it shows these `maxItems` options fully)\r\n\t\treturn (height - 2 * vertical_padding) * (maxItems / this.get_options().length) + vertical_padding\r\n\t}\r\n\r\n\tshould_animate()\r\n\t{\r\n\t\treturn true\r\n\r\n\t\t// return this.props.options.length >= this.props.transition_item_count_min\r\n\t}\r\n\r\n\tfocus()\r\n\t{\r\n\t\tif (this.autocomplete)\r\n\t\t{\r\n\t\t\tfocus(this.autocomplete)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfocus(this.selected)\r\n\t\t}\r\n\t}\r\n\r\n\ttoggle = (event, toggle_options = {}) =>\r\n\t{\r\n\t\tif (event)\r\n\t\t{\r\n\t\t\t// Don't navigate away when clicking links\r\n\t\t\tevent.preventDefault()\r\n\r\n\t\t\t// Not discarding the click event because\r\n\t\t\t// other expanded selects may be listening to it.\r\n\t\t\t// // Discard the click event so that it won't reach `document` click listener\r\n\t\t\t// event.stopPropagation() // doesn't work\r\n\t\t\t// event.nativeEvent.stopImmediatePropagation()\r\n\t\t}\r\n\r\n\t\tconst\r\n\t\t{\r\n\t\t\tmenu,\r\n\t\t\ttoggler,\r\n\t\t\tdisabled,\r\n\t\t\tautocomplete,\r\n\t\t\toptions,\r\n\t\t\tvalue,\r\n\t\t\tfocusUponSelection,\r\n\t\t\tonToggle,\r\n\t\t\tnativeExpanded,\r\n\t\t\tscrollIntoView,\r\n\t\t\texpandAnimationDuration\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tif (nativeExpanded)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (disabled)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (!menu && options.length === 0)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tclearTimeout(this.toggle_timeout)\r\n\t\tclearTimeout(this.scroll_into_view_timeout)\r\n\t\tclearTimeout(this.restore_focus_on_collapse_timeout)\r\n\r\n\t\tthis.toggle_timeout = undefined\r\n\t\tthis.scroll_into_view_timeout = undefined\r\n\t\tthis.restore_focus_on_collapse_timeout = undefined\r\n\r\n\t\tconst { expanded } = this.state\r\n\r\n\t\tif (!expanded && autocomplete)\r\n\t\t{\r\n\t\t\tthis.setState\r\n\t\t\t({\r\n\t\t\t\t// The input value can't be `undefined`\r\n\t\t\t\t// because in that case React would complain\r\n\t\t\t\t// about it being an \"uncontrolled input\"\r\n\t\t\t\tautocomplete_input_value : '',\r\n\t\t\t\tmatching_options         : options\r\n\t\t\t})\r\n\r\n\t\t\t// if (!this.state.autocomplete_width)\r\n\t\t\t// {\r\n\t\t\t// \tthis.setState({ autocomplete_width: this.get_widest_label_width() })\r\n\t\t\t// }\r\n\t\t}\r\n\r\n\t\t// Deferring expanding the select upon click\r\n\t\t// because `document.onClick(event)` should fire first,\r\n\t\t// otherwise `event.target` in that handler will be detached\r\n\t\t// from the document and so `this.document_clicked()` handler will\r\n\t\t// immediately toggle the select back to collapsed state.\r\n\t\tthis.toggle_timeout = setTimeout(() =>\r\n\t\t{\r\n\t\t\tthis.toggle_timeout = undefined\r\n\r\n\t\t\tthis.setState\r\n\t\t\t({\r\n\t\t\t\texpanded: !expanded\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tconst is_now_expanded = this.state.expanded\r\n\r\n\t\t\t\tif (!toggle_options.dont_focus_after_toggle)\r\n\t\t\t\t{\r\n\t\t\t\t\t// If it's autocomplete, then focus <input/> field\r\n\t\t\t\t\t// upon toggling the select component.\r\n\t\t\t\t\tif (autocomplete)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (is_now_expanded)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Focus the input after the select is expanded\r\n\t\t\t\t\t\t\tfocus(this.autocomplete)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (focusUponSelection)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Focus the toggler after the select is collapsed\r\n\t\t\t\t\t\t\tfocus(this.selected)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// For some reason Firefox loses focus\r\n\t\t\t\t\t\t// upon select expansion via a click,\r\n\t\t\t\t\t\t// so this extra `.focus()` works around that issue.\r\n\t\t\t\t\t\tfocus(this.selected)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.scroll_into_view_timeout = setTimeout(() =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.scroll_into_view_timeout = undefined\r\n\r\n\t\t\t\t\tconst is_still_expanded = this.state.expanded\r\n\r\n\t\t\t\t\t// For some reason in IE 11 \"scroll into view\" scrolls\r\n\t\t\t\t\t// to the top of the page, therefore turn it off for IE.\r\n\t\t\t\t\tif (is_still_expanded && this.list && scrollIntoView && !is_internet_explorer())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst element = ReactDOM.findDOMNode(this.list)\r\n\r\n\t\t\t\t\t\t// https://developer.mozilla.org/ru/docs/Web/API/Element/scrollIntoViewIfNeeded\r\n\t\t\t\t\t\tif (element.scrollIntoViewIfNeeded)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\telement.scrollIntoViewIfNeeded(false)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// https://github.com/stipsan/scroll-into-view-if-needed\r\n\t\t\t\t\t\t\tscrollIntoViewIfNeeded(element, false, { duration: 800 })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\texpandAnimationDuration * 1.1)\r\n\t\t\t})\r\n\r\n\t\t\tif (!expanded && options)\r\n\t\t\t{\r\n\t\t\t\t// Focus either the selected option\r\n\t\t\t\t// or the first option in the list.\r\n\r\n\t\t\t\tconst focused_option_value = value || options[0].value\r\n\r\n\t\t\t\tthis.setState({ focused_option_value })\r\n\r\n\t\t\t\t// Scroll down to the focused option\r\n\t\t\t\tthis.scroll_to(focused_option_value)\r\n\t\t\t}\r\n\r\n\t\t\tif (onToggle)\r\n\t\t\t{\r\n\t\t\t\tonToggle(!expanded)\r\n\t\t\t}\r\n\r\n\t\t\tif (toggle_options.callback)\r\n\t\t\t{\r\n\t\t\t\ttoggle_options.callback()\r\n\t\t\t}\r\n\t\t},\r\n\t\t0)\r\n\t}\r\n\r\n\titem_clicked = (value, event) =>\r\n\t{\r\n\t\tif (event)\r\n\t\t{\r\n\t\t\tevent.preventDefault()\r\n\t\t}\r\n\r\n\t\tconst { onChange, value: previous_value } = this.props\r\n\r\n\t\tthis.toggle(undefined,\r\n\t\t{\r\n\t\t\tcallback()\r\n\t\t\t{\r\n\t\t\t\t// Call `onChange` only if `value` did actually change\r\n\t\t\t\tif (value !== previous_value)\r\n\t\t\t\t{\r\n\t\t\t\t\tonChange(value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tdocument_clicked = (event) =>\r\n\t{\r\n\t\tconst autocomplete = ReactDOM.findDOMNode(this.autocomplete)\r\n\t\tconst selected_option = ReactDOM.findDOMNode(this.selected)\r\n\t\tconst options_list = ReactDOM.findDOMNode(this.list)\r\n\r\n\t\t// Don't close the select if its expander button has been clicked,\r\n\t\t// or if autocomplete has been clicked,\r\n\t\t// or if an option was selected from the list.\r\n\t\tif (options_list && options_list.contains(event.target)\r\n\t\t\t|| (autocomplete && autocomplete.contains(event.target))\r\n\t\t\t|| (selected_option && selected_option.contains(event.target)))\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tthis.setState({ expanded: false })\r\n\r\n\t\tconst { onToggle } = this.props\r\n\r\n\t\tif (onToggle)\r\n\t\t{\r\n\t\t\tonToggle(false)\r\n\t\t}\r\n\t}\r\n\r\n\t// Would have used `onBlur={...}` event handler here\r\n\t// with `if (container.contains(event.relatedTarget))` condition,\r\n\t// but it doesn't work in IE in React.\r\n\t// https://github.com/facebook/react/issues/3751\r\n\t//\r\n\t// Therefore, using the hacky `document.onClick` handlers\r\n\t// and this `onKeyDown` Tab handler\r\n\t// until `event.relatedTarget` support is consistent in React.\r\n\t//\r\n\ton_key_down_in_container = (event) =>\r\n\t{\r\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst { expanded } = this.state\r\n\r\n\t\tswitch (event.keyCode)\r\n\t\t{\r\n\t\t\t// Toggle on Tab out\r\n\t\t\tcase 9:\r\n\t\t\t\tif (expanded)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.toggle(undefined, { dont_focus_after_toggle: true })\r\n\r\n\t\t\t\t\tconst { onTabOut } = this.props\r\n\r\n\t\t\t\t\tif (onTabOut)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonTabOut(event)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\ton_key_down = (event) =>\r\n\t{\r\n\t\tconst { onKeyDown } = this.props\r\n\r\n\t\tif (onKeyDown)\r\n\t\t{\r\n\t\t\tonKeyDown(event)\r\n\t\t}\r\n\r\n\t\tif (submitFormOnCtrlEnter(event, this.autocomplete || this.selected))\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst { options, value, autocomplete } = this.props\r\n\t\tconst { expanded, focused_option_value } = this.state\r\n\r\n\t\t// Maybe add support for `children` arrow navigation in future\r\n\t\tif (options)\r\n\t\t{\r\n\t\t\tswitch (event.keyCode)\r\n\t\t\t{\r\n\t\t\t\t// Select the previous option (if present) on up arrow\r\n\t\t\t\tcase 38:\r\n\t\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\t\tconst previous = this.previous_focusable_option()\r\n\r\n\t\t\t\t\tif (previous)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.show_option(previous.value, 'top')\r\n\t\t\t\t\t\treturn this.setState({ focused_option_value: previous.value })\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn\r\n\r\n\t\t\t\t// Select the next option (if present) on down arrow\r\n\t\t\t\tcase 40:\r\n\t\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\t\tconst next = this.next_focusable_option()\r\n\r\n\t\t\t\t\tif (next)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.show_option(next.value, 'bottom')\r\n\t\t\t\t\t\treturn this.setState({ focused_option_value: next.value })\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn\r\n\r\n\t\t\t\t// Collapse on Escape\r\n\t\t\t\t//\r\n\t\t\t\t// Maybe add this kind of support for \"Escape\" key in some future:\r\n\t\t\t\t//  hiding the item list, cancelling current item selection process\r\n\t\t\t\t//  and restoring the selection present before the item list was toggled.\r\n\t\t\t\t//\r\n\t\t\t\tcase 27:\r\n\t\t\t\t\t// Collapse the list if it's expanded\r\n\t\t\t\t\tif (this.state.expanded)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.toggle()\r\n\r\n\t\t\t\t\t\t// Restore focus when the list is collapsed\r\n\t\t\t\t\t\tthis.restore_focus_on_collapse_timeout = setTimeout(() =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.restore_focus_on_collapse_timeout = undefined\r\n\t\t\t\t\t\t\tfocus(this.selected)\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t0)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn\r\n\r\n\t\t\t\t// on Enter\r\n\t\t\t\tcase 13:\r\n\t\t\t\t\t// Choose the focused item on Enter\r\n\t\t\t\t\tif (expanded)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\t\t\t// If an item is focused\r\n\t\t\t\t\t\t// (which may not be the case\r\n\t\t\t\t\t\t//  when autocomplete is matching no items)\r\n\t\t\t\t\t\t// (still for non-autocomplete select\r\n\t\t\t\t\t\t//  it is valid to have a default option)\r\n\t\t\t\t\t\tif (this.get_options() && this.get_options().length > 0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Choose the focused item\r\n\t\t\t\t\t\t\tthis.item_clicked(focused_option_value)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Else it should have just submitted the form on Enter,\r\n\t\t\t\t\t// but it wouldn't because the select element activator is a <button/>\r\n\t\t\t\t\t// therefore hitting Enter while being focused on it just pushes that button.\r\n\t\t\t\t\t// So submit the enclosing form manually.\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (submitContainingForm(ReactDOM.findDOMNode(this.select)))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tevent.preventDefault()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn\r\n\r\n\t\t\t\t// on Spacebar\r\n\t\t\t\tcase 32:\r\n\t\t\t\t\t// Choose the focused item on Enter\r\n\t\t\t\t\tif (expanded)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// only if it it's an `options` select\r\n\t\t\t\t\t\t// and also if it's not an autocomplete\r\n\t\t\t\t\t\tif (this.get_options() && !autocomplete)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tevent.preventDefault()\r\n\r\n\t\t\t\t\t\t\t// `focused_option_value` could be non-existent\r\n\t\t\t\t\t\t\t// in case of `autocomplete`, but since\r\n\t\t\t\t\t\t\t// we're explicitly not handling autocomplete here\r\n\t\t\t\t\t\t\t// it is valid to select any options including the default ones.\r\n\t\t\t\t\t\t\tthis.item_clicked(focused_option_value)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Otherwise, the spacebar keydown event on a `<button/>`\r\n\t\t\t\t\t// will trigger `onClick` and `.toggle()` will be called.\r\n\r\n\t\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// This handler is a workaround for `redux-form`\r\n\ton_blur = (event) =>\r\n\t{\r\n\t\tconst { onBlur, value } = this.props\r\n\r\n\t\t// If clicked on a select option then don't trigger \"blur\" event\r\n\t\tif (event.relatedTarget && event.currentTarget.contains(event.relatedTarget))\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// This `onBlur` interceptor is a workaround for `redux-form`,\r\n\t\t// so that it gets the right (parsed, not the formatted one)\r\n\t\t// `event.target.value` in its `onBlur` handler.\r\n\t\tif (onBlur)\r\n\t\t{\r\n\t\t\tconst _event =\r\n\t\t\t{\r\n\t\t\t\t...event,\r\n\t\t\t\ttarget:\r\n\t\t\t\t{\r\n\t\t\t\t\t...event.target,\r\n\t\t\t\t\tvalue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// For `redux-form` event detection.\r\n\t\t\t// https://github.com/erikras/redux-form/blob/v5/src/events/isEvent.js\r\n\t\t\t_event.stopPropagation = event.stopPropagation\r\n\t\t\t_event.preventDefault  = event.preventDefault\r\n\r\n\t\t\tonBlur(_event)\r\n\t\t}\r\n\t}\r\n\r\n\tget_options()\r\n\t{\r\n\t\tconst { autocomplete, autocompleteShowAll, maxItems, options } = this.props\r\n\t\tconst { matching_options } = this.state\r\n\r\n\t\tif (!autocomplete)\r\n\t\t{\r\n\t\t\treturn options\r\n\t\t}\r\n\r\n\t\tif (autocompleteShowAll)\r\n\t\t{\r\n\t\t\treturn matching_options\r\n\t\t}\r\n\r\n\t\treturn matching_options.slice(0, maxItems)\r\n\t}\r\n\r\n\t// Get the previous option (relative to the currently focused option)\r\n\tprevious_focusable_option()\r\n\t{\r\n\t\tconst options = this.get_options()\r\n\t\tconst { focused_option_value } = this.state\r\n\r\n\t\tlet i = 0\r\n\t\twhile (i < options.length)\r\n\t\t{\r\n\t\t\tif (options[i].value === focused_option_value)\r\n\t\t\t{\r\n\t\t\t\tif (i - 1 >= 0)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn options[i - 1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n\r\n\t// Get the next option (relative to the currently focused option)\r\n\tnext_focusable_option()\r\n\t{\r\n\t\tconst options = this.get_options()\r\n\t\tconst { focused_option_value } = this.state\r\n\r\n\t\tlet i = 0\r\n\t\twhile (i < options.length)\r\n\t\t{\r\n\t\t\tif (options[i].value === focused_option_value)\r\n\t\t\t{\r\n\t\t\t\tif (i + 1 < options.length)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn options[i + 1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n\r\n\t// Scrolls to an option having the value\r\n\tscroll_to(value)\r\n\t{\r\n\t\tconst { vertical_padding } = this.state\r\n\r\n\t\tconst option_element = ReactDOM.findDOMNode(this.options[get_option_key(value)])\r\n\t\tconst list = ReactDOM.findDOMNode(this.list)\r\n\r\n\t\t// If this option isn't even shown\r\n\t\t// (e.g. autocomplete)\r\n\t\t// then don't scroll to it because there's nothing to scroll to.\r\n\t\tif (!option_element)\r\n\t\t{\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet offset_top = option_element.offsetTop\r\n\r\n\t\tconst is_first_option = list.firstChild === option_element\r\n\r\n\t\t// If it's the first one - then scroll to list top\r\n\t\tif (is_first_option)\r\n\t\t{\r\n\t\t\toffset_top -= vertical_padding\r\n\t\t}\r\n\r\n\t\tlist.scrollTop = offset_top\r\n\t}\r\n\r\n\t// Fully shows an option having the `value` (scrolls to it if neccessary)\r\n\tshow_option(value, gravity)\r\n\t{\r\n\t\tconst { vertical_padding } = this.state\r\n\r\n\t\tconst option_element = ReactDOM.findDOMNode(this.options[get_option_key(value)])\r\n\t\tconst list = ReactDOM.findDOMNode(this.list)\r\n\r\n\t\tconst is_first_option = list.firstChild === option_element\r\n\t\tconst is_last_option  = list.lastChild === option_element\r\n\r\n\t\tswitch (gravity)\r\n\t\t{\r\n\t\t\tcase 'top':\r\n\t\t\t\tlet top_line = option_element.offsetTop\r\n\r\n\t\t\t\tif (is_first_option)\r\n\t\t\t\t{\r\n\t\t\t\t\ttop_line -= vertical_padding\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (top_line < list.scrollTop)\r\n\t\t\t\t{\r\n\t\t\t\t\tlist.scrollTop = top_line\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\r\n\r\n\t\t\tcase 'bottom':\r\n\t\t\t\tlet bottom_line = option_element.offsetTop + option_element.offsetHeight\r\n\r\n\t\t\t\tif (is_last_option)\r\n\t\t\t\t{\r\n\t\t\t\t\tbottom_line += vertical_padding\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (bottom_line > list.scrollTop + list.offsetHeight)\r\n\t\t\t\t{\r\n\t\t\t\t\tlist.scrollTop = bottom_line - list.offsetHeight\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\t// Calculates height of the expanded item list\r\n\tcalculate_height()\r\n\t{\r\n\t\tconst { options } = this.props\r\n\r\n\t\tconst list_dom_node = ReactDOM.findDOMNode(this.list)\r\n\t\t// const border = parseInt(window.getComputedStyle(list_dom_node).borderTopWidth)\r\n\t\tconst height = list_dom_node.scrollHeight\r\n\t\tconst vertical_padding = parseInt(window.getComputedStyle(list_dom_node).paddingTop)\r\n\r\n\t\t// For things like \"accordeon\".\r\n\t\t//\r\n\t\t// const images = list_dom_node.querySelectorAll('img')\r\n\t\t//\r\n\t\t// if (images.length > 0)\r\n\t\t// {\r\n\t\t// \treturn this.preload_images(list_dom_node, images)\r\n\t\t// }\r\n\r\n\t\tconst state = { height, vertical_padding }\r\n\r\n\t\t// If it's a regular `<select/>` with `<option/>`s\r\n\t\t// then calculate its height.\r\n\t\tif (this.is_scrollable() && options && this.overflown())\r\n\t\t{\r\n\t\t\tstate.list_height = this.scrollable_list_height(height, vertical_padding)\r\n\t\t}\r\n\r\n\t\tthis.setState(state)\r\n\t}\r\n\r\n\tis_scrollable()\r\n\t{\r\n\t\tconst { menu, autocomplete, autocompleteShowAll, scroll } = this.props\r\n\r\n\t\treturn !menu && (autocomplete && autocompleteShowAll || !autocomplete) && scroll\r\n\t}\r\n\r\n\t// This turned out not to work for `autocomplete`\r\n\t// because not all options are ever shown.\r\n\t// get_widest_label_width()\r\n\t// {\r\n\t// \t// <ul/> -> <li/> -> <button/>\r\n\t// \tconst label = ReactDOM.findDOMNode(this.list).firstChild.firstChild\r\n\t//\r\n\t// \tconst style = getComputedStyle(label)\r\n\t//\r\n\t// \tconst width = parseFloat(style.width)\r\n\t// \tconst side_padding = parseFloat(style.paddingLeft)\r\n\t//\r\n\t// \treturn width - 2 * side_padding\r\n\t// }\r\n\r\n\tget_matching_options(options, value)\r\n\t{\r\n\t\t// If the autocomplete value is `undefined` or empty\r\n\t\tif (!value)\r\n\t\t{\r\n\t\t\treturn options\r\n\t\t}\r\n\r\n\t\tvalue = value.toLowerCase()\r\n\r\n\t\treturn options.filter(({ label, verbose }) =>\r\n\t\t{\r\n\t\t\treturn (verbose || label).toLowerCase().indexOf(value) >= 0\r\n\t\t})\r\n\t}\r\n\r\n\ton_autocomplete_input_change = (event) =>\r\n\t{\r\n\t\tconst { options } = this.props\r\n\t\tconst input = event.target.value\r\n\t\tconst matching_options = this.get_matching_options(options, input)\r\n\r\n\t\tthis.setState\r\n\t\t({\r\n\t\t\tautocomplete_input_value: input,\r\n\t\t\tmatching_options,\r\n\t\t\tfocused_option_value: matching_options.length > 0 ? matching_options[0].value : undefined\r\n\t\t})\r\n\t}\r\n}\r\n\r\nSelect.Separator = function(props)\r\n{\r\n\treturn <div className=\"rrui__select__separator\"/>\r\n}\r\n\r\nconst native_expanded_select_container_style =\r\n{\r\n\tdisplay : 'inline-block'\r\n}\r\n\r\n// There can be an `undefined` value,\r\n// so just `{ value }` won't do here.\r\nfunction get_option_key(value)\r\n{\r\n\treturn value_is_empty(value) ? '@@rrui/select/undefined' : value\r\n}\r\n\r\nfunction value_is_empty(value)\r\n{\r\n\treturn value === null || value === undefined\r\n}\r\n\r\n// Detects Internet Explorer.\r\n// https://stackoverflow.com/questions/19999388/check-if-user-is-using-ie-with-jquery\r\nfunction is_internet_explorer()\r\n{\r\n\treturn window.navigator.userAgent.indexOf('MSIE ') > 0 ||\r\n\t\twindow.navigator.userAgent.indexOf('Trident/') > 0\r\n}\r\n\r\n/**\r\n * Focuses on a React component (if any).\r\n * @param  {?object} component\r\n */\r\nfunction focus(component)\r\n{\r\n\tif (!component)\r\n\t{\r\n\t\treturn\r\n\t}\r\n\r\n\tif (typeof component.focus === 'function')\r\n\t{\r\n\t\treturn component.focus()\r\n\t}\r\n\r\n\tconst node = ReactDOM.findDOMNode(component)\r\n\tif (node)\r\n\t{\r\n\t\treturn node.focus()\r\n\t}\r\n}\r\n\r\nfunction render_icon(icon)\r\n{\r\n\treturn typeof icon === 'function' ? icon() : icon\r\n}"]}