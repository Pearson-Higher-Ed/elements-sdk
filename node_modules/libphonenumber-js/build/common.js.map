{"version":3,"sources":["../source/common.js"],"names":["matches_entirely","text","regular_expression","matched_groups","match","length"],"mappings":";;;;;QAEgBA,gB,GAAAA,gB;AAFhB;AACA;AACO,SAASA,gBAAT,GACP;AAAA,KADiCC,IACjC,uEADwC,EACxC;AAAA,KAD4CC,kBAC5C;;AACC,KAAI,OAAOA,kBAAP,KAA8B,QAAlC,EACA;AACCA,uBAAqB,SAASA,kBAAT,GAA8B,IAAnD;AACA;;AAED,KAAMC,iBAAiBF,KAAKG,KAAL,CAAWF,kBAAX,CAAvB;AACA,QAAOC,mBAAmB,IAAnB,IAA2BA,eAAe,CAAf,EAAkBE,MAAlB,KAA6BJ,KAAKI,MAApE;AACA","file":"common.js","sourcesContent":["// Checks whether the entire input sequence can be matched\r\n// against the regular expression.\r\nexport function matches_entirely(text = '', regular_expression)\r\n{\r\n\tif (typeof regular_expression === 'string')\r\n\t{\r\n\t\tregular_expression = '^(?:' + regular_expression + ')$'\r\n\t}\r\n\r\n\tconst matched_groups = text.match(regular_expression)\r\n\treturn matched_groups !== null && matched_groups[0].length === text.length\r\n}"]}