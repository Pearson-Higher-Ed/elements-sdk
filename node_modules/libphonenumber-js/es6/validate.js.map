{"version":3,"sources":["../source/validate.js"],"names":["parse","is_viable_phone_number","get_number_type","sort_out_arguments","get_types","is_valid","arg_1","arg_2","arg_3","input","metadata","country","country_metadata","countries"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,sBAAhB,QAA8C,SAA9C;AACA,OAAOC,eAAP,IAA0BC,kBAA1B,QAAoD,SAApD;;AAEA,SAECC,SAFD,QAIK,YAJL;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,KAAhC,EACf;AAAA,2BAC6BL,mBAAmBG,KAAnB,EAA0BC,KAA1B,EAAiCC,KAAjC,CAD7B;AAAA,KACSC,KADT,uBACSA,KADT;AAAA,KACgBC,QADhB,uBACgBA,QADhB;;AAGC,KAAI,CAACD,KAAL,EACA;AACC,SAAO,KAAP;AACA;;AAED,KAAI,CAACA,MAAME,OAAX,EACA;AACC,SAAO,KAAP;AACA;;AAED,KAAMC,mBAAmBF,SAASG,SAAT,CAAmBJ,MAAME,OAAzB,CAAzB;;AAEA,KAAIP,UAAUQ,gBAAV,CAAJ,EACA;AACC,MAAI,CAACV,gBAAgBO,KAAhB,EAAuBC,QAAvB,CAAL,EACA;AACC,UAAO,KAAP;AACA;AACD;;AAED,QAAO,IAAP;AACA","file":"validate.js","sourcesContent":["import parse, { is_viable_phone_number } from './parse'\r\nimport get_number_type, { sort_out_arguments } from './types'\r\n\r\nimport\r\n{\r\n\tget_types\r\n}\r\nfrom './metadata'\r\n\r\n// Checks if a given phone number is valid\r\n//\r\n// Example use cases:\r\n//\r\n// ```js\r\n// is_valid('8005553535', 'RU')\r\n// is_valid('8005553535', 'RU', metadata)\r\n// is_valid({ phone: '8005553535', country: 'RU' })\r\n// is_valid({ phone: '8005553535', country: 'RU' }, metadata)\r\n// is_valid('+78005553535')\r\n// is_valid('+78005553535', metadata)\r\n// ```\r\n//\r\nexport default function is_valid(arg_1, arg_2, arg_3)\r\n{\r\n\tconst { input, metadata } = sort_out_arguments(arg_1, arg_2, arg_3)\r\n\r\n\tif (!input)\r\n\t{\r\n\t\treturn false\r\n\t}\r\n\r\n\tif (!input.country)\r\n\t{\r\n\t\treturn false\r\n\t}\r\n\r\n\tconst country_metadata = metadata.countries[input.country]\r\n\r\n\tif (get_types(country_metadata))\r\n\t{\r\n\t\tif (!get_number_type(input, metadata))\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\treturn true\r\n}"]}