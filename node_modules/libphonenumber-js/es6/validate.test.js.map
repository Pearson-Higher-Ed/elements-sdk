{"version":3,"sources":["../source/validate.test.js"],"names":["chai","expect","should","metadata","validate","is_valid_number","parameters","push","apply","describe","it","equal","undefined","country","phone","countries","DE","thrower","throw"],"mappings":"AAAA,OAAOA,IAAP,IAAeC,MAAf,QAA6B,MAA7B;AACAD,KAAKE,MAAL;;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAEA,SAASC,eAAT,GACA;AAAA,mCAD4BC,UAC5B;AAD4BA,YAC5B;AAAA;;AACCA,YAAWC,IAAX,CAAgBJ,QAAhB;AACA,QAAOC,SAASI,KAAT,CAAe,IAAf,EAAqBF,UAArB,CAAP;AACA;;AAEDG,SAAS,UAAT,EAAqB,YACrB;AACCC,IAAG,+BAAH,EAAoC,YACpC;AACCL,kBAAgB,iBAAhB,EAAmCH,MAAnC,CAA0CS,KAA1C,CAAgD,IAAhD;AACAN,kBAAgB,YAAhB,EAA8BH,MAA9B,CAAqCS,KAArC,CAA2C,KAA3C;;AAEAN,kBAAgB,iBAAhB,EAAmCO,SAAnC,EAA8CV,MAA9C,CAAqDS,KAArD,CAA2D,IAA3D;;AAEAN,kBAAgB,gBAAhB,EAAkC,IAAlC,EAAwCH,MAAxC,CAA+CS,KAA/C,CAAqD,IAArD;AACAN,kBAAgB,UAAhB,EAA4B,IAA5B,EAAkCH,MAAlC,CAAyCS,KAAzC,CAA+C,KAA/C;;AAEAN,kBAAgB,EAAEQ,SAAS,IAAX,EAAiBC,OAAO,YAAxB,EAAhB,EAAwDZ,MAAxD,CAA+DS,KAA/D,CAAqE,IAArE;AACA,EAXD;;AAaAD,IAAG,kGAAH,EAAuG,YACvG;AACC;AACAL,kBAAgB,QAAhB,EAA0B,IAA1B,EAAgCH,MAAhC,CAAuCS,KAAvC,CAA6C,IAA7C;AACAN,kBAAgB,SAAhB,EAA2B,IAA3B,EAAiCH,MAAjC,CAAwCS,KAAxC,CAA8C,IAA9C;;AAEA;AACA;AACAR,WAASY,SAAT,CAAmBC,EAAnB,CAAsB,CAAtB,IACA,CACO,+NADP,EAEO,kEAFP,EAGO,cAHP,EAIO,2CAJP,EAKO,WALP,EAMO,uIANP,EAOO,8BAPP,EAQO,gCARP,CADA;;AAYA;AACAX,kBAAgB,QAAhB,EAA0B,IAA1B,EAAgCH,MAAhC,CAAuCS,KAAvC,CAA6C,KAA7C;AACAN,kBAAgB,SAAhB,EAA2B,IAA3B,EAAiCH,MAAjC,CAAwCS,KAAxC,CAA8C,KAA9C;;AAEA;AACA;AACA;AACA;AACAN,kBAAgB,WAAhB,EAA6B,IAA7B,EAAmCH,MAAnC,CAA0CS,KAA1C,CAAgD,IAAhD;AACA,EA7BD;;AA+BAD,IAAG,2BAAH,EAAgC,YAChC;AACC;AACAL,kBAAgBO,SAAhB,EAA2BV,MAA3B,CAAkCS,KAAlC,CAAwC,KAAxC;;AAEA;AACA,MAAMM,UAAU,SAAVA,OAAU;AAAA,UAAMb,UAAN;AAAA,GAAhB;AACAa,UAAQf,MAAR,CAAegB,KAAf,CAAqB,UAArB;;AAEA;AACAb,kBAAgB,aAAhB,EAA+BH,MAA/B,CAAsCS,KAAtC,CAA4C,KAA5C;AACAN,kBAAgB,cAAhB,EAAgC,IAAhC,EAAsCH,MAAtC,CAA6CS,KAA7C,CAAmD,KAAnD;;AAEA;AACAN,kBAAgB,WAAhB,EAA6B,IAA7B,EAAmCH,MAAnC,CAA0CS,KAA1C,CAAgD,IAAhD;AACA,EAfD;;AAiBAD,IAAG,uCAAH,EAA4C,YAC5C;AACC;AACAL,kBAAgB,uBAAhB,EAAyCH,MAAzC,CAAgDS,KAAhD,CAAsD,IAAtD;AACA;AACAN,kBAAgB,kBAAhB,EAAoC,IAApC,EAA0CH,MAA1C,CAAiDS,KAAjD,CAAuD,IAAvD;AACA,EAND;AAOA,CAtED","file":"validate.test.js","sourcesContent":["import chai, { expect } from 'chai'\r\nchai.should()\r\n\r\nimport metadata from '../metadata.min'\r\nimport validate from '../source/validate'\r\n\r\nfunction is_valid_number(...parameters)\r\n{\r\n\tparameters.push(metadata)\r\n\treturn validate.apply(this, parameters)\r\n}\r\n\r\ndescribe('validate', () =>\r\n{\r\n\tit('should validate phone numbers', function()\r\n\t{\r\n\t\tis_valid_number('+1-213-373-4253').should.equal(true)\r\n\t\tis_valid_number('+1-213-373').should.equal(false)\r\n\r\n\t\tis_valid_number('+1-213-373-4253', undefined).should.equal(true)\r\n\r\n\t\tis_valid_number('(213) 373-4253', 'US').should.equal(true)\r\n\t\tis_valid_number('(213) 37', 'US').should.equal(false)\r\n\r\n\t\tis_valid_number({ country: 'US', phone: '2133734253' }).should.equal(true)\r\n\t})\r\n\r\n\tit('should refine phone number validation in case extended regular expressions are set for a country', () =>\r\n\t{\r\n\t\t// Germany general validation must pass\r\n\t\tis_valid_number('123456', 'DE').should.equal(true)\r\n\t\tis_valid_number('0123456', 'DE').should.equal(true)\r\n\r\n\t\t// Extra regular expressions for precise national number validation.\r\n\t\t// `types` index in compressed array is `9`\r\n\t\tmetadata.countries.DE[9] =\r\n\t\t[\r\n         \"[246]\\\\d{5,13}|3(?:0\\\\d{3,13}|2\\\\d{9}|[3-9]\\\\d{4,13})|5(?:0[2-8]|[1256]\\\\d|[38][0-8]|4\\\\d{0,2}|[79][0-7])\\\\d{3,11}|7(?:0[2-8]|[1-9]\\\\d)\\\\d{3,10}|8(?:0[2-9]|[1-9]\\\\d)\\\\d{3,10}|9(?:0[6-9]\\\\d{3,10}|1\\\\d{4,12}|[2-9]\\\\d{4,11})\",\r\n         \"1(?:5[0-25-9]\\\\d{8}|6[023]\\\\d{7,8}|7(?:[0-57-9]\\\\d?|6\\\\d)\\\\d{7})\",\r\n         \"800\\\\d{7,12}\",\r\n         \"137[7-9]\\\\d{6}|900(?:[135]\\\\d{6}|9\\\\d{7})\",\r\n         \"700\\\\d{8}\",\r\n         \"1(?:5(?:(?:2\\\\d55|7\\\\d99|9\\\\d33)\\\\d{7}|(?:[034568]00|113)\\\\d{8})|6(?:013|255|399)\\\\d{7,8}|7(?:[015]13|[234]55|[69]33|[78]99)\\\\d{7,8})\",\r\n         \"18(?:1\\\\d{5,11}|[2-9]\\\\d{8})\",\r\n         \"16(?:4\\\\d{1,10}|[89]\\\\d{1,11})\"\r\n      ]\r\n\r\n\t\t// Germany extended validation must not pass for an invalid phone number\r\n\t\tis_valid_number('123456', 'DE').should.equal(false)\r\n\t\tis_valid_number('0123456', 'DE').should.equal(false)\r\n\r\n\t\t// // Germany extended validation must pass for a valid phone number,\r\n\t\t// // but still must demand the national prefix (`0`).\r\n\t\t// // https://github.com/catamphetamine/libphonenumber-js/issues/6\r\n\t\t// is_valid_number('30123456', 'DE').should.equal(false)\r\n\t\tis_valid_number('030123456', 'DE').should.equal(true)\r\n\t})\r\n\r\n\tit('should work in edge cases', function()\r\n\t{\r\n\t\t// No arguments\r\n\t\tis_valid_number(undefined).should.equal(false)\r\n\r\n\t\t// No metadata\r\n\t\tconst thrower = () => validate()\r\n\t\tthrower.should.throw('Metadata')\r\n\r\n\t\t// Non-phone-number characters in a phone number\r\n\t\tis_valid_number('+499821958a').should.equal(false)\r\n\t\tis_valid_number('88005553535x', 'RU').should.equal(false)\r\n\r\n\t\t// Numerical `value`\r\n\t\tis_valid_number(88005553535, 'RU').should.equal(true)\r\n\t})\r\n\r\n\tit('should accept phone number extensions', function()\r\n\t{\r\n\t\t// International\r\n\t\tis_valid_number('+12133734253 ext. 123').should.equal(true)\r\n\t\t// National\r\n\t\tis_valid_number('88005553535 x123', 'RU').should.equal(true)\r\n\t})\r\n})"]}